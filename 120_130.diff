diff --git a/BUILD b/BUILD
new file mode 100644
index 0000000..2afebb4
--- /dev/null
+++ b/BUILD
@@ -0,0 +1,29 @@
+Software required to build:
+
+	Borland Pascal 7 is requird to build the game and some tools used to create data files.
+
+	The Digital Mars D compiler is required to the conversation and log conversion tools.
+		http://digitalmars.com/d/1.0/index.html
+
+	Borland's BGI Toolkit is required for VGA256.BGI
+
+	Python is required for the fixnames.py script. This converts all files in a directory in lowercase.
+
+Wine/DOSBox setup:
+	The Makefile assumes that Borland Pascal has been installed to F:\BP and Ironseed is placed in S:\IRONSEED
+
+	The command "sudo echo 0 > /proc/sys/vm/mmap_min_addr" may be required to run DOS executables under Wine. Newer versions of Wine may invoke DOSBox execute the command.
+
+
+Borland Pascal 7 setup:
+	The directories use in Borland Pascal need to be configured.
+	Run BP and in the menu "Options -> Directories" configure the directories like below.
+		EXE & TPU directory:  s:\ironseed\code
+		Include directories:  s:\ironseed\code;s:\ironseed\dmp
+		Unit directories:     s:\ironseed\code;s:\ironseed\dmp;f:\bp\units;f:\bp\winunits
+		Object directories:   s:\ironseed\code;s:\ironseed\dmp
+		Resource directories: f:\bp\units;
+
+BGI Toolkit:
+	VGA256.BGI should be extracted from the toolkit. It should be then converted to a .OBJ file with BINOBJ.EXE included with Borland Pascal.
+	VGA256.OBJ should be place in ironseed/code
\ No newline at end of file
diff --git a/COPYING b/COPYING
new file mode 100644
index 0000000..94a9ed0
--- /dev/null
+++ b/COPYING
@@ -0,0 +1,674 @@
+                    GNU GENERAL PUBLIC LICENSE
+                       Version 3, 29 June 2007
+
+ Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>
+ Everyone is permitted to copy and distribute verbatim copies
+ of this license document, but changing it is not allowed.
+
+                            Preamble
+
+  The GNU General Public License is a free, copyleft license for
+software and other kinds of works.
+
+  The licenses for most software and other practical works are designed
+to take away your freedom to share and change the works.  By contrast,
+the GNU General Public License is intended to guarantee your freedom to
+share and change all versions of a program--to make sure it remains free
+software for all its users.  We, the Free Software Foundation, use the
+GNU General Public License for most of our software; it applies also to
+any other work released this way by its authors.  You can apply it to
+your programs, too.
+
+  When we speak of free software, we are referring to freedom, not
+price.  Our General Public Licenses are designed to make sure that you
+have the freedom to distribute copies of free software (and charge for
+them if you wish), that you receive source code or can get it if you
+want it, that you can change the software or use pieces of it in new
+free programs, and that you know you can do these things.
+
+  To protect your rights, we need to prevent others from denying you
+these rights or asking you to surrender the rights.  Therefore, you have
+certain responsibilities if you distribute copies of the software, or if
+you modify it: responsibilities to respect the freedom of others.
+
+  For example, if you distribute copies of such a program, whether
+gratis or for a fee, you must pass on to the recipients the same
+freedoms that you received.  You must make sure that they, too, receive
+or can get the source code.  And you must show them these terms so they
+know their rights.
+
+  Developers that use the GNU GPL protect your rights with two steps:
+(1) assert copyright on the software, and (2) offer you this License
+giving you legal permission to copy, distribute and/or modify it.
+
+  For the developers' and authors' protection, the GPL clearly explains
+that there is no warranty for this free software.  For both users' and
+authors' sake, the GPL requires that modified versions be marked as
+changed, so that their problems will not be attributed erroneously to
+authors of previous versions.
+
+  Some devices are designed to deny users access to install or run
+modified versions of the software inside them, although the manufacturer
+can do so.  This is fundamentally incompatible with the aim of
+protecting users' freedom to change the software.  The systematic
+pattern of such abuse occurs in the area of products for individuals to
+use, which is precisely where it is most unacceptable.  Therefore, we
+have designed this version of the GPL to prohibit the practice for those
+products.  If such problems arise substantially in other domains, we
+stand ready to extend this provision to those domains in future versions
+of the GPL, as needed to protect the freedom of users.
+
+  Finally, every program is threatened constantly by software patents.
+States should not allow patents to restrict development and use of
+software on general-purpose computers, but in those that do, we wish to
+avoid the special danger that patents applied to a free program could
+make it effectively proprietary.  To prevent this, the GPL assures that
+patents cannot be used to render the program non-free.
+
+  The precise terms and conditions for copying, distribution and
+modification follow.
+
+                       TERMS AND CONDITIONS
+
+  0. Definitions.
+
+  "This License" refers to version 3 of the GNU General Public License.
+
+  "Copyright" also means copyright-like laws that apply to other kinds of
+works, such as semiconductor masks.
+
+  "The Program" refers to any copyrightable work licensed under this
+License.  Each licensee is addressed as "you".  "Licensees" and
+"recipients" may be individuals or organizations.
+
+  To "modify" a work means to copy from or adapt all or part of the work
+in a fashion requiring copyright permission, other than the making of an
+exact copy.  The resulting work is called a "modified version" of the
+earlier work or a work "based on" the earlier work.
+
+  A "covered work" means either the unmodified Program or a work based
+on the Program.
+
+  To "propagate" a work means to do anything with it that, without
+permission, would make you directly or secondarily liable for
+infringement under applicable copyright law, except executing it on a
+computer or modifying a private copy.  Propagation includes copying,
+distribution (with or without modification), making available to the
+public, and in some countries other activities as well.
+
+  To "convey" a work means any kind of propagation that enables other
+parties to make or receive copies.  Mere interaction with a user through
+a computer network, with no transfer of a copy, is not conveying.
+
+  An interactive user interface displays "Appropriate Legal Notices"
+to the extent that it includes a convenient and prominently visible
+feature that (1) displays an appropriate copyright notice, and (2)
+tells the user that there is no warranty for the work (except to the
+extent that warranties are provided), that licensees may convey the
+work under this License, and how to view a copy of this License.  If
+the interface presents a list of user commands or options, such as a
+menu, a prominent item in the list meets this criterion.
+
+  1. Source Code.
+
+  The "source code" for a work means the preferred form of the work
+for making modifications to it.  "Object code" means any non-source
+form of a work.
+
+  A "Standard Interface" means an interface that either is an official
+standard defined by a recognized standards body, or, in the case of
+interfaces specified for a particular programming language, one that
+is widely used among developers working in that language.
+
+  The "System Libraries" of an executable work include anything, other
+than the work as a whole, that (a) is included in the normal form of
+packaging a Major Component, but which is not part of that Major
+Component, and (b) serves only to enable use of the work with that
+Major Component, or to implement a Standard Interface for which an
+implementation is available to the public in source code form.  A
+"Major Component", in this context, means a major essential component
+(kernel, window system, and so on) of the specific operating system
+(if any) on which the executable work runs, or a compiler used to
+produce the work, or an object code interpreter used to run it.
+
+  The "Corresponding Source" for a work in object code form means all
+the source code needed to generate, install, and (for an executable
+work) run the object code and to modify the work, including scripts to
+control those activities.  However, it does not include the work's
+System Libraries, or general-purpose tools or generally available free
+programs which are used unmodified in performing those activities but
+which are not part of the work.  For example, Corresponding Source
+includes interface definition files associated with source files for
+the work, and the source code for shared libraries and dynamically
+linked subprograms that the work is specifically designed to require,
+such as by intimate data communication or control flow between those
+subprograms and other parts of the work.
+
+  The Corresponding Source need not include anything that users
+can regenerate automatically from other parts of the Corresponding
+Source.
+
+  The Corresponding Source for a work in source code form is that
+same work.
+
+  2. Basic Permissions.
+
+  All rights granted under this License are granted for the term of
+copyright on the Program, and are irrevocable provided the stated
+conditions are met.  This License explicitly affirms your unlimited
+permission to run the unmodified Program.  The output from running a
+covered work is covered by this License only if the output, given its
+content, constitutes a covered work.  This License acknowledges your
+rights of fair use or other equivalent, as provided by copyright law.
+
+  You may make, run and propagate covered works that you do not
+convey, without conditions so long as your license otherwise remains
+in force.  You may convey covered works to others for the sole purpose
+of having them make modifications exclusively for you, or provide you
+with facilities for running those works, provided that you comply with
+the terms of this License in conveying all material for which you do
+not control copyright.  Those thus making or running the covered works
+for you must do so exclusively on your behalf, under your direction
+and control, on terms that prohibit them from making any copies of
+your copyrighted material outside their relationship with you.
+
+  Conveying under any other circumstances is permitted solely under
+the conditions stated below.  Sublicensing is not allowed; section 10
+makes it unnecessary.
+
+  3. Protecting Users' Legal Rights From Anti-Circumvention Law.
+
+  No covered work shall be deemed part of an effective technological
+measure under any applicable law fulfilling obligations under article
+11 of the WIPO copyright treaty adopted on 20 December 1996, or
+similar laws prohibiting or restricting circumvention of such
+measures.
+
+  When you convey a covered work, you waive any legal power to forbid
+circumvention of technological measures to the extent such circumvention
+is effected by exercising rights under this License with respect to
+the covered work, and you disclaim any intention to limit operation or
+modification of the work as a means of enforcing, against the work's
+users, your or third parties' legal rights to forbid circumvention of
+technological measures.
+
+  4. Conveying Verbatim Copies.
+
+  You may convey verbatim copies of the Program's source code as you
+receive it, in any medium, provided that you conspicuously and
+appropriately publish on each copy an appropriate copyright notice;
+keep intact all notices stating that this License and any
+non-permissive terms added in accord with section 7 apply to the code;
+keep intact all notices of the absence of any warranty; and give all
+recipients a copy of this License along with the Program.
+
+  You may charge any price or no price for each copy that you convey,
+and you may offer support or warranty protection for a fee.
+
+  5. Conveying Modified Source Versions.
+
+  You may convey a work based on the Program, or the modifications to
+produce it from the Program, in the form of source code under the
+terms of section 4, provided that you also meet all of these conditions:
+
+    a) The work must carry prominent notices stating that you modified
+    it, and giving a relevant date.
+
+    b) The work must carry prominent notices stating that it is
+    released under this License and any conditions added under section
+    7.  This requirement modifies the requirement in section 4 to
+    "keep intact all notices".
+
+    c) You must license the entire work, as a whole, under this
+    License to anyone who comes into possession of a copy.  This
+    License will therefore apply, along with any applicable section 7
+    additional terms, to the whole of the work, and all its parts,
+    regardless of how they are packaged.  This License gives no
+    permission to license the work in any other way, but it does not
+    invalidate such permission if you have separately received it.
+
+    d) If the work has interactive user interfaces, each must display
+    Appropriate Legal Notices; however, if the Program has interactive
+    interfaces that do not display Appropriate Legal Notices, your
+    work need not make them do so.
+
+  A compilation of a covered work with other separate and independent
+works, which are not by their nature extensions of the covered work,
+and which are not combined with it such as to form a larger program,
+in or on a volume of a storage or distribution medium, is called an
+"aggregate" if the compilation and its resulting copyright are not
+used to limit the access or legal rights of the compilation's users
+beyond what the individual works permit.  Inclusion of a covered work
+in an aggregate does not cause this License to apply to the other
+parts of the aggregate.
+
+  6. Conveying Non-Source Forms.
+
+  You may convey a covered work in object code form under the terms
+of sections 4 and 5, provided that you also convey the
+machine-readable Corresponding Source under the terms of this License,
+in one of these ways:
+
+    a) Convey the object code in, or embodied in, a physical product
+    (including a physical distribution medium), accompanied by the
+    Corresponding Source fixed on a durable physical medium
+    customarily used for software interchange.
+
+    b) Convey the object code in, or embodied in, a physical product
+    (including a physical distribution medium), accompanied by a
+    written offer, valid for at least three years and valid for as
+    long as you offer spare parts or customer support for that product
+    model, to give anyone who possesses the object code either (1) a
+    copy of the Corresponding Source for all the software in the
+    product that is covered by this License, on a durable physical
+    medium customarily used for software interchange, for a price no
+    more than your reasonable cost of physically performing this
+    conveying of source, or (2) access to copy the
+    Corresponding Source from a network server at no charge.
+
+    c) Convey individual copies of the object code with a copy of the
+    written offer to provide the Corresponding Source.  This
+    alternative is allowed only occasionally and noncommercially, and
+    only if you received the object code with such an offer, in accord
+    with subsection 6b.
+
+    d) Convey the object code by offering access from a designated
+    place (gratis or for a charge), and offer equivalent access to the
+    Corresponding Source in the same way through the same place at no
+    further charge.  You need not require recipients to copy the
+    Corresponding Source along with the object code.  If the place to
+    copy the object code is a network server, the Corresponding Source
+    may be on a different server (operated by you or a third party)
+    that supports equivalent copying facilities, provided you maintain
+    clear directions next to the object code saying where to find the
+    Corresponding Source.  Regardless of what server hosts the
+    Corresponding Source, you remain obligated to ensure that it is
+    available for as long as needed to satisfy these requirements.
+
+    e) Convey the object code using peer-to-peer transmission, provided
+    you inform other peers where the object code and Corresponding
+    Source of the work are being offered to the general public at no
+    charge under subsection 6d.
+
+  A separable portion of the object code, whose source code is excluded
+from the Corresponding Source as a System Library, need not be
+included in conveying the object code work.
+
+  A "User Product" is either (1) a "consumer product", which means any
+tangible personal property which is normally used for personal, family,
+or household purposes, or (2) anything designed or sold for incorporation
+into a dwelling.  In determining whether a product is a consumer product,
+doubtful cases shall be resolved in favor of coverage.  For a particular
+product received by a particular user, "normally used" refers to a
+typical or common use of that class of product, regardless of the status
+of the particular user or of the way in which the particular user
+actually uses, or expects or is expected to use, the product.  A product
+is a consumer product regardless of whether the product has substantial
+commercial, industrial or non-consumer uses, unless such uses represent
+the only significant mode of use of the product.
+
+  "Installation Information" for a User Product means any methods,
+procedures, authorization keys, or other information required to install
+and execute modified versions of a covered work in that User Product from
+a modified version of its Corresponding Source.  The information must
+suffice to ensure that the continued functioning of the modified object
+code is in no case prevented or interfered with solely because
+modification has been made.
+
+  If you convey an object code work under this section in, or with, or
+specifically for use in, a User Product, and the conveying occurs as
+part of a transaction in which the right of possession and use of the
+User Product is transferred to the recipient in perpetuity or for a
+fixed term (regardless of how the transaction is characterized), the
+Corresponding Source conveyed under this section must be accompanied
+by the Installation Information.  But this requirement does not apply
+if neither you nor any third party retains the ability to install
+modified object code on the User Product (for example, the work has
+been installed in ROM).
+
+  The requirement to provide Installation Information does not include a
+requirement to continue to provide support service, warranty, or updates
+for a work that has been modified or installed by the recipient, or for
+the User Product in which it has been modified or installed.  Access to a
+network may be denied when the modification itself materially and
+adversely affects the operation of the network or violates the rules and
+protocols for communication across the network.
+
+  Corresponding Source conveyed, and Installation Information provided,
+in accord with this section must be in a format that is publicly
+documented (and with an implementation available to the public in
+source code form), and must require no special password or key for
+unpacking, reading or copying.
+
+  7. Additional Terms.
+
+  "Additional permissions" are terms that supplement the terms of this
+License by making exceptions from one or more of its conditions.
+Additional permissions that are applicable to the entire Program shall
+be treated as though they were included in this License, to the extent
+that they are valid under applicable law.  If additional permissions
+apply only to part of the Program, that part may be used separately
+under those permissions, but the entire Program remains governed by
+this License without regard to the additional permissions.
+
+  When you convey a copy of a covered work, you may at your option
+remove any additional permissions from that copy, or from any part of
+it.  (Additional permissions may be written to require their own
+removal in certain cases when you modify the work.)  You may place
+additional permissions on material, added by you to a covered work,
+for which you have or can give appropriate copyright permission.
+
+  Notwithstanding any other provision of this License, for material you
+add to a covered work, you may (if authorized by the copyright holders of
+that material) supplement the terms of this License with terms:
+
+    a) Disclaiming warranty or limiting liability differently from the
+    terms of sections 15 and 16 of this License; or
+
+    b) Requiring preservation of specified reasonable legal notices or
+    author attributions in that material or in the Appropriate Legal
+    Notices displayed by works containing it; or
+
+    c) Prohibiting misrepresentation of the origin of that material, or
+    requiring that modified versions of such material be marked in
+    reasonable ways as different from the original version; or
+
+    d) Limiting the use for publicity purposes of names of licensors or
+    authors of the material; or
+
+    e) Declining to grant rights under trademark law for use of some
+    trade names, trademarks, or service marks; or
+
+    f) Requiring indemnification of licensors and authors of that
+    material by anyone who conveys the material (or modified versions of
+    it) with contractual assumptions of liability to the recipient, for
+    any liability that these contractual assumptions directly impose on
+    those licensors and authors.
+
+  All other non-permissive additional terms are considered "further
+restrictions" within the meaning of section 10.  If the Program as you
+received it, or any part of it, contains a notice stating that it is
+governed by this License along with a term that is a further
+restriction, you may remove that term.  If a license document contains
+a further restriction but permits relicensing or conveying under this
+License, you may add to a covered work material governed by the terms
+of that license document, provided that the further restriction does
+not survive such relicensing or conveying.
+
+  If you add terms to a covered work in accord with this section, you
+must place, in the relevant source files, a statement of the
+additional terms that apply to those files, or a notice indicating
+where to find the applicable terms.
+
+  Additional terms, permissive or non-permissive, may be stated in the
+form of a separately written license, or stated as exceptions;
+the above requirements apply either way.
+
+  8. Termination.
+
+  You may not propagate or modify a covered work except as expressly
+provided under this License.  Any attempt otherwise to propagate or
+modify it is void, and will automatically terminate your rights under
+this License (including any patent licenses granted under the third
+paragraph of section 11).
+
+  However, if you cease all violation of this License, then your
+license from a particular copyright holder is reinstated (a)
+provisionally, unless and until the copyright holder explicitly and
+finally terminates your license, and (b) permanently, if the copyright
+holder fails to notify you of the violation by some reasonable means
+prior to 60 days after the cessation.
+
+  Moreover, your license from a particular copyright holder is
+reinstated permanently if the copyright holder notifies you of the
+violation by some reasonable means, this is the first time you have
+received notice of violation of this License (for any work) from that
+copyright holder, and you cure the violation prior to 30 days after
+your receipt of the notice.
+
+  Termination of your rights under this section does not terminate the
+licenses of parties who have received copies or rights from you under
+this License.  If your rights have been terminated and not permanently
+reinstated, you do not qualify to receive new licenses for the same
+material under section 10.
+
+  9. Acceptance Not Required for Having Copies.
+
+  You are not required to accept this License in order to receive or
+run a copy of the Program.  Ancillary propagation of a covered work
+occurring solely as a consequence of using peer-to-peer transmission
+to receive a copy likewise does not require acceptance.  However,
+nothing other than this License grants you permission to propagate or
+modify any covered work.  These actions infringe copyright if you do
+not accept this License.  Therefore, by modifying or propagating a
+covered work, you indicate your acceptance of this License to do so.
+
+  10. Automatic Licensing of Downstream Recipients.
+
+  Each time you convey a covered work, the recipient automatically
+receives a license from the original licensors, to run, modify and
+propagate that work, subject to this License.  You are not responsible
+for enforcing compliance by third parties with this License.
+
+  An "entity transaction" is a transaction transferring control of an
+organization, or substantially all assets of one, or subdividing an
+organization, or merging organizations.  If propagation of a covered
+work results from an entity transaction, each party to that
+transaction who receives a copy of the work also receives whatever
+licenses to the work the party's predecessor in interest had or could
+give under the previous paragraph, plus a right to possession of the
+Corresponding Source of the work from the predecessor in interest, if
+the predecessor has it or can get it with reasonable efforts.
+
+  You may not impose any further restrictions on the exercise of the
+rights granted or affirmed under this License.  For example, you may
+not impose a license fee, royalty, or other charge for exercise of
+rights granted under this License, and you may not initiate litigation
+(including a cross-claim or counterclaim in a lawsuit) alleging that
+any patent claim is infringed by making, using, selling, offering for
+sale, or importing the Program or any portion of it.
+
+  11. Patents.
+
+  A "contributor" is a copyright holder who authorizes use under this
+License of the Program or a work on which the Program is based.  The
+work thus licensed is called the contributor's "contributor version".
+
+  A contributor's "essential patent claims" are all patent claims
+owned or controlled by the contributor, whether already acquired or
+hereafter acquired, that would be infringed by some manner, permitted
+by this License, of making, using, or selling its contributor version,
+but do not include claims that would be infringed only as a
+consequence of further modification of the contributor version.  For
+purposes of this definition, "control" includes the right to grant
+patent sublicenses in a manner consistent with the requirements of
+this License.
+
+  Each contributor grants you a non-exclusive, worldwide, royalty-free
+patent license under the contributor's essential patent claims, to
+make, use, sell, offer for sale, import and otherwise run, modify and
+propagate the contents of its contributor version.
+
+  In the following three paragraphs, a "patent license" is any express
+agreement or commitment, however denominated, not to enforce a patent
+(such as an express permission to practice a patent or covenant not to
+sue for patent infringement).  To "grant" such a patent license to a
+party means to make such an agreement or commitment not to enforce a
+patent against the party.
+
+  If you convey a covered work, knowingly relying on a patent license,
+and the Corresponding Source of the work is not available for anyone
+to copy, free of charge and under the terms of this License, through a
+publicly available network server or other readily accessible means,
+then you must either (1) cause the Corresponding Source to be so
+available, or (2) arrange to deprive yourself of the benefit of the
+patent license for this particular work, or (3) arrange, in a manner
+consistent with the requirements of this License, to extend the patent
+license to downstream recipients.  "Knowingly relying" means you have
+actual knowledge that, but for the patent license, your conveying the
+covered work in a country, or your recipient's use of the covered work
+in a country, would infringe one or more identifiable patents in that
+country that you have reason to believe are valid.
+
+  If, pursuant to or in connection with a single transaction or
+arrangement, you convey, or propagate by procuring conveyance of, a
+covered work, and grant a patent license to some of the parties
+receiving the covered work authorizing them to use, propagate, modify
+or convey a specific copy of the covered work, then the patent license
+you grant is automatically extended to all recipients of the covered
+work and works based on it.
+
+  A patent license is "discriminatory" if it does not include within
+the scope of its coverage, prohibits the exercise of, or is
+conditioned on the non-exercise of one or more of the rights that are
+specifically granted under this License.  You may not convey a covered
+work if you are a party to an arrangement with a third party that is
+in the business of distributing software, under which you make payment
+to the third party based on the extent of your activity of conveying
+the work, and under which the third party grants, to any of the
+parties who would receive the covered work from you, a discriminatory
+patent license (a) in connection with copies of the covered work
+conveyed by you (or copies made from those copies), or (b) primarily
+for and in connection with specific products or compilations that
+contain the covered work, unless you entered into that arrangement,
+or that patent license was granted, prior to 28 March 2007.
+
+  Nothing in this License shall be construed as excluding or limiting
+any implied license or other defenses to infringement that may
+otherwise be available to you under applicable patent law.
+
+  12. No Surrender of Others' Freedom.
+
+  If conditions are imposed on you (whether by court order, agreement or
+otherwise) that contradict the conditions of this License, they do not
+excuse you from the conditions of this License.  If you cannot convey a
+covered work so as to satisfy simultaneously your obligations under this
+License and any other pertinent obligations, then as a consequence you may
+not convey it at all.  For example, if you agree to terms that obligate you
+to collect a royalty for further conveying from those to whom you convey
+the Program, the only way you could satisfy both those terms and this
+License would be to refrain entirely from conveying the Program.
+
+  13. Use with the GNU Affero General Public License.
+
+  Notwithstanding any other provision of this License, you have
+permission to link or combine any covered work with a work licensed
+under version 3 of the GNU Affero General Public License into a single
+combined work, and to convey the resulting work.  The terms of this
+License will continue to apply to the part which is the covered work,
+but the special requirements of the GNU Affero General Public License,
+section 13, concerning interaction through a network will apply to the
+combination as such.
+
+  14. Revised Versions of this License.
+
+  The Free Software Foundation may publish revised and/or new versions of
+the GNU General Public License from time to time.  Such new versions will
+be similar in spirit to the present version, but may differ in detail to
+address new problems or concerns.
+
+  Each version is given a distinguishing version number.  If the
+Program specifies that a certain numbered version of the GNU General
+Public License "or any later version" applies to it, you have the
+option of following the terms and conditions either of that numbered
+version or of any later version published by the Free Software
+Foundation.  If the Program does not specify a version number of the
+GNU General Public License, you may choose any version ever published
+by the Free Software Foundation.
+
+  If the Program specifies that a proxy can decide which future
+versions of the GNU General Public License can be used, that proxy's
+public statement of acceptance of a version permanently authorizes you
+to choose that version for the Program.
+
+  Later license versions may give you additional or different
+permissions.  However, no additional obligations are imposed on any
+author or copyright holder as a result of your choosing to follow a
+later version.
+
+  15. Disclaimer of Warranty.
+
+  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY
+APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT
+HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY
+OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,
+THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM
+IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF
+ALL NECESSARY SERVICING, REPAIR OR CORRECTION.
+
+  16. Limitation of Liability.
+
+  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
+WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS
+THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY
+GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE
+USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF
+DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD
+PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),
+EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF
+SUCH DAMAGES.
+
+  17. Interpretation of Sections 15 and 16.
+
+  If the disclaimer of warranty and limitation of liability provided
+above cannot be given local legal effect according to their terms,
+reviewing courts shall apply local law that most closely approximates
+an absolute waiver of all civil liability in connection with the
+Program, unless a warranty or assumption of liability accompanies a
+copy of the Program in return for a fee.
+
+                     END OF TERMS AND CONDITIONS
+
+            How to Apply These Terms to Your New Programs
+
+  If you develop a new program, and you want it to be of the greatest
+possible use to the public, the best way to achieve this is to make it
+free software which everyone can redistribute and change under these terms.
+
+  To do so, attach the following notices to the program.  It is safest
+to attach them to the start of each source file to most effectively
+state the exclusion of warranty; and each file should have at least
+the "copyright" line and a pointer to where the full notice is found.
+
+    <one line to give the program's name and a brief idea of what it does.>
+    Copyright (C) <year>  <name of author>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+
+Also add information on how to contact you by electronic and paper mail.
+
+  If the program does terminal interaction, make it output a short
+notice like this when it starts in an interactive mode:
+
+    <program>  Copyright (C) <year>  <name of author>
+    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
+    This is free software, and you are welcome to redistribute it
+    under certain conditions; type `show c' for details.
+
+The hypothetical commands `show w' and `show c' should show the appropriate
+parts of the General Public License.  Of course, your program's commands
+might be different; for a GUI interface, you would use an "about box".
+
+  You should also get your employer (if you work as a programmer) or school,
+if any, to sign a "copyright disclaimer" for the program, if necessary.
+For more information on this, and how to apply and follow the GNU GPL, see
+<http://www.gnu.org/licenses/>.
+
+  The GNU General Public License does not permit incorporating your program
+into proprietary programs.  If your program is a subroutine library, you
+may consider it more useful to permit linking proprietary applications with
+the library.  If this is what you want to do, use the GNU Lesser General
+Public License instead of this License.  But first, please read
+<http://www.gnu.org/philosophy/why-not-lgpl.html>.
diff --git a/makefile b/Makefile
similarity index 63%
rename from makefile
rename to Makefile
index 2ef64fd..3f61619 100644
--- a/makefile
+++ b/Makefile
@@ -1,6 +1,6 @@
 
 export WINEPREFIX=/home/xen/.wine-ironseed/
-WINEEXE=wine
+WINE=wine
 
 FIXNAMES=python code/fixnames.py
 
@@ -10,15 +10,17 @@ CREWGENSRC=code/crewgen.pas code/data.pas code/gmouse.pas code/saveload.pas code
 INTROSRC=code/intro.pas code/version.pas code/gmouse.pas code/modplay.pas $(DMPSRC)
 ISSRC=code/is.pas
 
-TPC=$(WINEEXE) g:/bp/bin/tpc.exe /Tg:\\bp\\bin
+TPC=$(WINE) f:/bp/bin/tpc.exe /Tf:\\bp\\bin
 TPCFLAGS=/B /Q /M /DUSE_EMS /L /GD /\$$N+ /\$$G+ /\$$S- /\$$I-
 TPCTOOLFLAGS=/B /Q /M /DUSE_EMS /L /GD /\$$N+ /\$$G+ /\$$S- /\$$I+
 # /Ecode /Ocode /Udmp /Idmp
 
+TASM=$(WINE) f:/bp/bin/tasm.exe 
+
 CREWCONVS=data/conv0001.dta data/conv0002.dta data/conv0003.dta data/conv0004.dta data/conv0005.dta data/conv0006.dta
 RACECONVS=data/conv1001.dta data/conv1002.dta data/conv1003.dta data/conv1004.dta data/conv1005.dta data/conv1006.dta data/conv1007.dta data/conv1008.dta data/conv1009.dta data/conv1010.dta data/conv1011.dta
 SPECCONVS=data/conv1100.dta data/conv1101.dta data/conv1102.dta data/conv1103.dta
-all: convmake logmake main.exe crewgen.exe intro.exe config.exe detsound.exe is.exe $(RACECONVS) $(SPECCONVS) $(CREWCONVS) data/log.dta datafiles
+all: convmake logmake main.exe crewgen.exe intro.exe detsound.exe is.exe $(RACECONVS) $(SPECCONVS) $(CREWCONVS) data/log.dta datafiles # sndcfg.exe
 
 convmake: makedata/convmake.d makedata/data.d
 	dmd makedata/convmake.d makedata/data.d
@@ -74,18 +76,18 @@ data/log.dta: makedata/logs.txt logmake
 	./logmake makedata/logs.txt data/titles.dta data/log.dta 
 
 # /CD /$$N+ /$$G+ /$$S- /$$I- 
-main.exe: $(MAINSRC)
+main.exe: $(MAINSRC) code/mover.obj code/vga256.obj
 	$(TPC) $(TPCFLAGS) code\\main.pas #| linefix
-	cat code/main.exe code/main.ovr > main.exe
 	$(FIXNAMES) code
+	cat code/main.exe code/main.ovr > main.exe
 	touch main.exe --reference=code/main.exe
 
-crewgen.exe: $(CREWGENSRC)
+crewgen.exe: $(CREWGENSRC) code/mover.obj code/vga256.obj
 	$(TPC) $(TPCFLAGS) code\\crewgen.pas #| linefix
 	$(FIXNAMES) code
 	cp code/crewgen.exe ./crewgen.exe
 
-intro.exe: $(INTROSRC)
+intro.exe: $(INTROSRC) code/scroller.obj code/vga256.obj
 	$(TPC) $(TPCFLAGS) code\\intro.pas #| linefix
 	$(FIXNAMES) code
 	cp code/intro.exe ./intro.exe
@@ -95,21 +97,38 @@ is.exe: $(ISSRC)
 	$(FIXNAMES) code
 	cp code/is.exe ./is.exe
 
-config.exe: code/config.pas makedata/win.pas
-	$(TPC) $(TPCFLAGS) code\\config.pas #| linefix
+sndcfg.exe: code/sndcfg.pas #makedata/win.pas
+	$(TPC) $(TPCFLAGS) code\\sndcfg.pas #| linefix
 	$(FIXNAMES) code
-	cp code/config.exe ./config.exe
+	cp code/sndcfg.exe ./sndcfg.exe
 
 detsound.exe: code/detsound.pas
 	$(TPC) $(TPCFLAGS) code\\detsound.pas #| linefix
 	$(FIXNAMES) code
 	cp code/detsound.exe ./detsound.exe
 
+code/graphics.obj: code/graphics.asm
+	$(TASM) code\\graphics.asm code\\
+	$(FIXNAMES) code
+code/mouse.obj: code/mouse.asm
+	$(TASM) code\\mouse.asm code\\
+	$(FIXNAMES) code
+code/mover.obj: code/mover.asm
+	$(TASM) code\\mover.asm code\\
+	$(FIXNAMES) code
+code/mover2.obj: code/mover2.asm
+	$(TASM) code\\mover2.asm code\\
+	$(FIXNAMES) code
+code/scroller.obj: code/scroller.asm
+	$(TASM) code\\scroller.asm code\\
+	$(FIXNAMES) code
+
 clean:
-	rm -f code/*.tpu code/*.exe code/*.ovr 
-	rm -f obj/*.o
+	rm -f code/*.tpu code/*.exe code/*.ovr code/*.map
+	rm -f code/graphics.obj code/mourse.obj code/mover.obj code/mover2.obj code/scroller.obj
 	rm -f main.exe crewgen.exe intro.exe
 	rm -f convmake logmake
+	rm -f data/iteminfo.dta data/creation.dta data/cargo.dta data/scan.dta data/sysnames.dta data/contact0.dta data/crew.dta data/artifact.dta data/elements.dta data/event.dta
 
 code/itemmake.exe: makedata/itemmake.pas
 	$(TPC) $(TPCTOOLFLAGS) makedata\\itemmake.pas #| linefix
@@ -123,18 +142,54 @@ code/cargmake.exe: makedata/cargmake.pas
 code/scanmake.exe: makedata/scanmake.pas
 	$(TPC) $(TPCTOOLFLAGS) makedata\\scanmake.pas #| linefix
 	$(FIXNAMES) code
+code/sysmake.exe: makedata/sysmake.pas
+	$(TPC) $(TPCTOOLFLAGS) makedata\\sysmake.pas #| linefix
+	$(FIXNAMES) code
+code/aliemake.exe: makedata/aliemake.pas
+	$(TPC) $(TPCTOOLFLAGS) makedata\\aliemake.pas #| linefix
+	$(FIXNAMES) code
+code/crewmake.exe: makedata/crewmake.pas
+	$(TPC) $(TPCTOOLFLAGS) makedata\\crewmake.pas #| linefix
+	$(FIXNAMES) code
+code/artimake.exe: makedata/artimake.pas
+	$(TPC) $(TPCTOOLFLAGS) makedata\\artimake.pas #| linefix
+	$(FIXNAMES) code
+code/elemmake.exe: makedata/elemmake.pas
+	$(TPC) $(TPCTOOLFLAGS) makedata\\elemmake.pas #| linefix
+	$(FIXNAMES) code
+code/eventmak.exe: makedata/eventmak.pas
+	$(TPC) $(TPCTOOLFLAGS) makedata\\eventmak.pas #| linefix
+	$(FIXNAMES) code
 
 data/iteminfo.dta: code/itemmake.exe makedata/iteminfo.txt
-	$(WINEEXE) code/itemmake.exe
+	$(WINE) code/itemmake.exe
 	$(FIXNAMES) code data
 data/creation.dta: code/creamake.exe makedata/creation.txt
-	$(WINEEXE) code/creamake.exe
-	$(FIXNAMES) code data
+	$(WINE) code/creamake.exe
+	$(FIXNAMES) code data other
 data/cargo.dta: code/cargmake.exe makedata/cargo.txt
-	$(WINEEXE) code/cargmake.exe
+	$(WINE) code/cargmake.exe
 	$(FIXNAMES) code data
 data/scan.dta: code/scanmake.exe makedata/scandata.txt
-	$(WINEEXE) code/scanmake.exe
-	$(FIXNAMES) code data .
+	$(WINE) code/scanmake.exe
+	$(FIXNAMES) code data
+data/sysname.dta: code/sysmake.exe makedata/names.txt
+	$(WINE) code/sysmake.exe
+	$(FIXNAMES) code data
+data/contact0.dta: code/aliemake.exe makedata/contact.txt
+	$(WINE) code/aliemake.exe
+	$(FIXNAMES) code data
+data/crew.dta: code/crewmake.exe makedata/crew.txt
+	$(WINE) code/crewmake.exe
+	$(FIXNAMES) code data
+data/artifact.dta: code/artimake.exe makedata/anom.txt
+	$(WINE) code/artimake.exe
+	$(FIXNAMES) code data
+data/elements.dta: code/elemmake.exe makedata/element.txt
+	$(WINE) code/elemmake.exe
+	$(FIXNAMES) code data
+data/event.dta: code/eventmak.exe makedata/event.txt
+	$(WINE) code/eventmak.exe
+	$(FIXNAMES) code data
 
-datafiles: data/iteminfo.dta data/creation.dta data/cargo.dta data/scandata.dta
+datafiles: data/iteminfo.dta data/creation.dta data/cargo.dta data/scan.dta data/sysname.dta data/contact0.dta data/crew.dta data/artifact.dta data/elements.dta data/event.dta
diff --git a/code/cargtool.pas b/code/cargtool.pas
index 2350b3c..62f3fdf 100644
--- a/code/cargtool.pas
+++ b/code/cargtool.pas
@@ -1,4 +1,20 @@
 unit cargtool;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
 
 {***************************
    Cargo/Creation unit for IronSeed
diff --git a/code/combat.pas b/code/combat.pas
index 9063e5a..c724a23 100644
--- a/code/combat.pas
+++ b/code/combat.pas
@@ -1,4 +1,20 @@
 unit combat;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
 
 {***************************
    Battle/Combat unit for IronSeed
diff --git a/code/comm.pas b/code/comm.pas
index bbbf125..b32e6a9 100644
--- a/code/comm.pas
+++ b/code/comm.pas
@@ -1,4 +1,20 @@
 unit comm;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
 
 {***************************
    Communication unit for IronSeed
@@ -14,7 +30,7 @@ unit comm;
 {$O+}
 interface
 
-uses data,amp;
+uses data;
 
 procedure conversewithcrew;
 procedure continuecontact(hail: boolean);
diff --git a/code/comm2.pas b/code/comm2.pas
index fc43695..dd093cb 100644
--- a/code/comm2.pas
+++ b/code/comm2.pas
@@ -1,4 +1,20 @@
 unit comm2;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
 
 {***************************
    Communication unit #2 for IronSeed
diff --git a/code/crew2.pas b/code/crew2.pas
index f4af393..e2ff7c3 100644
--- a/code/crew2.pas
+++ b/code/crew2.pas
@@ -1,4 +1,20 @@
 unit crew2;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
 
 {***************************
    Crew Manipulation unit 2 for IronSeed
diff --git a/code/crewgen.pas b/code/crewgen.pas
index 92b3c34..25ca02a 100644
--- a/code/crewgen.pas
+++ b/code/crewgen.pas
@@ -1,4 +1,21 @@
 program crewgen;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
+
 {$M 4500,300000,300000}
 {$S-,L-,D-}
 
diff --git a/code/crewinfo.pas b/code/crewinfo.pas
index 1daf332..e7f32fa 100644
--- a/code/crewinfo.pas
+++ b/code/crewinfo.pas
@@ -1,4 +1,20 @@
 unit crewinfo;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
 
 {***************************
    Crew Manipulation unit for IronSeed
diff --git a/code/crewtick.pas b/code/crewtick.pas
index c4e67df..84cff22 100644
--- a/code/crewtick.pas
+++ b/code/crewtick.pas
@@ -1,4 +1,20 @@
 unit crewtick;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
 
 {$O+}
 
diff --git a/code/data.pas b/code/data.pas
index 290233f..860835b 100644
--- a/code/data.pas
+++ b/code/data.pas
@@ -1,4 +1,20 @@
 unit data;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
 
 {***************************
    Data unit for IronSeed
diff --git a/code/detsound.pas b/code/detsound.pas
index 991b970..5f8b75a 100644
--- a/code/detsound.pas
+++ b/code/detsound.pas
@@ -1,6 +1,22 @@
 program detectsoundinformation;
+(********************************************************************
+    This file is part of Ironseed.
 
-uses strings,crt,MCP,DET_SB,DET_PAS,DET_ARIA,DETGUS;
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
+
+{$I DSMI.INC}, strings,crt,MCP,DET_SB,DET_PAS,DET_ARIA,DETGUS;
 
 var
  scard: TSoundCard;
diff --git a/code/display.pas b/code/display.pas
index cdaa15f..a593cf6 100644
--- a/code/display.pas
+++ b/code/display.pas
@@ -1,4 +1,20 @@
 unit display;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
 
 {***************************
    Ship Display Control unit for IronSeed
diff --git a/code/emstool.pas b/code/emstool.pas
index 2612fb8..103bc73 100644
--- a/code/emstool.pas
+++ b/code/emstool.pas
@@ -1,4 +1,20 @@
 unit emstool;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
 
 interface
 
@@ -154,4 +170,4 @@ end;
 
 begin
  ems.initialize;
-end.
\ No newline at end of file
+end.
diff --git a/code/ending.pas b/code/ending.pas
index 0f60004..e12599b 100644
--- a/code/ending.pas
+++ b/code/ending.pas
@@ -1,4 +1,21 @@
 unit ending;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
+
 {***************************
 
   Endgame Sequence for IronSeed
diff --git a/code/explore.pas b/code/explore.pas
index 8a6db39..a6bd9ab 100644
--- a/code/explore.pas
+++ b/code/explore.pas
@@ -1,4 +1,20 @@
 unit explore;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
 
 {***************************
    Planet Exploration unit for IronSeed
diff --git a/code/gmouse.pas b/code/gmouse.pas
index cba494b..da4854e 100644
--- a/code/gmouse.pas
+++ b/code/gmouse.pas
@@ -1,4 +1,20 @@
 unit gmouse;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
 
 {***************************
    Mouse Utilities unit for IronSeed
diff --git a/code/graphics.asm b/code/graphics.asm
index 2e1d057..ce3d709 100644
--- a/code/graphics.asm
+++ b/code/graphics.asm
@@ -1,5 +1,21 @@
 ideal
 p486
+;********************************************************************
+;    This file is part of Ironseed.
+;
+;    Ironseed is free software: you can redistribute it and/or modify
+;    it under the terms of the GNU General Public License as published by
+;    the Free Software Foundation, either version 3 of the License, or
+;    (at your option) any later version.
+;
+;    Ironseed is distributed in the hope that it will be useful,
+;    but WITHOUT ANY WARRANTY; without even the implied warranty of
+;    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+;    GNU General Public License for more details.
+;
+;    You should have received a copy of the GNU General Public License
+;    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+;********************************************************************
 
 global mousehide: far
 global mousesetcursor: far
diff --git a/code/heapchk.pas b/code/heapchk.pas
index fa8a21c..b88f426 100644
--- a/code/heapchk.pas
+++ b/code/heapchk.pas
@@ -1,4 +1,20 @@
 unit heapchk;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
 
 interface
 procedure WriteHexWord(w: Word);
diff --git a/code/info.pas b/code/info.pas
index fec4879..f0c81f1 100644
--- a/code/info.pas
+++ b/code/info.pas
@@ -1,4 +1,20 @@
 unit info;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
 
 {***************************
    Information unit for IronSeed
diff --git a/code/init.pas b/code/init.pas
index babe559..95e635e 100644
--- a/code/init.pas
+++ b/code/init.pas
@@ -1,4 +1,20 @@
 unit init;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
 
 {***************************
    Initialization unit for IronSeed
diff --git a/code/install.pas b/code/install.pas
index 8d97f66..80eb6e7 100644
--- a/code/install.pas
+++ b/code/install.pas
@@ -1,4 +1,21 @@
 program installit;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
+
 {$M 4000,0,0}
 {
   Installation Unit for IronSeed
diff --git a/code/intro.pas b/code/intro.pas
index 1f18067..4662c54 100644
--- a/code/intro.pas
+++ b/code/intro.pas
@@ -1,4 +1,21 @@
 program intro;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
+
 {$M 5500,436000,436000}
 {$S-,D-,L-}
 
diff --git a/code/is.pas b/code/is.pas
index 622e55f..b835d51 100644
--- a/code/is.pas
+++ b/code/is.pas
@@ -1,4 +1,21 @@
 program ironseed;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
+
 {$M 2600,0,0}
 {S-,D-,L-}
 
diff --git a/code/journey.pas b/code/journey.pas
index 40e7a1d..caa53e7 100644
--- a/code/journey.pas
+++ b/code/journey.pas
@@ -1,4 +1,20 @@
 unit journey;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
 
 {***************************
    Main Control unit for IronSeed
diff --git a/code/main.pas b/code/main.pas
index 43bc175..666c39c 100644
--- a/code/main.pas
+++ b/code/main.pas
@@ -1,4 +1,21 @@
 program main;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
+
 {$M 6500,335000,655360} (*390000*)
 {$S-,L-,D-}
 
diff --git a/code/modplay.pas b/code/modplay.pas
index 638fa7b..3d71d54 100644
--- a/code/modplay.pas
+++ b/code/modplay.pas
@@ -1,4 +1,20 @@
 unit modplay;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
 
 {$O+}
 
diff --git a/code/mouse.asm b/code/mouse.asm
index 20cef14..56697df 100644
--- a/code/mouse.asm
+++ b/code/mouse.asm
@@ -1,5 +1,21 @@
 ideal
 p486
+;********************************************************************
+;    This file is part of Ironseed.
+;
+;    Ironseed is free software: you can redistribute it and/or modify
+;    it under the terms of the GNU General Public License as published by
+;    the Free Software Foundation, either version 3 of the License, or
+;    (at your option) any later version.
+;
+;    Ironseed is distributed in the hope that it will be useful,
+;    but WITHOUT ANY WARRANTY; without even the implied warranty of
+;    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+;    GNU General Public License for more details.
+;
+;    You should have received a copy of the GNU General Public License
+;    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+;********************************************************************
 
 global mousehide: far
 global mousesetcursor: far
diff --git a/code/mover.asm b/code/mover.asm
index 53afa07..6ad5389 100644
--- a/code/mover.asm
+++ b/code/mover.asm
@@ -1,6 +1,21 @@
-
 ideal
 p486
+;********************************************************************
+;    This file is part of Ironseed.
+;
+;    Ironseed is free software: you can redistribute it and/or modify
+;    it under the terms of the GNU General Public License as published by
+;    the Free Software Foundation, either version 3 of the License, or
+;    (at your option) any later version.
+;
+;    Ironseed is distributed in the hope that it will be useful,
+;    but WITHOUT ANY WARRANTY; without even the implied warranty of
+;    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+;    GNU General Public License for more details.
+;
+;    You should have received a copy of the GNU General Public License
+;    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+;********************************************************************
 
 global mymove: far
 global fillchar386: far
diff --git a/code/mover2.asm b/code/mover2.asm
index 24e2af8..f635d14 100644
--- a/code/mover2.asm
+++ b/code/mover2.asm
@@ -1,3 +1,19 @@
+;********************************************************************
+;    This file is part of Ironseed.
+;
+;    Ironseed is free software: you can redistribute it and/or modify
+;    it under the terms of the GNU General Public License as published by
+;    the Free Software Foundation, either version 3 of the License, or
+;    (at your option) any later version.
+;
+;    Ironseed is distributed in the hope that it will be useful,
+;    but WITHOUT ANY WARRANTY; without even the implied warranty of
+;    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+;    GNU General Public License for more details.
+;
+;    You should have received a copy of the GNU General Public License
+;    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+;********************************************************************
 
 ideal
 p486
diff --git a/code/saveload.pas b/code/saveload.pas
index 237e7c2..e545b07 100644
--- a/code/saveload.pas
+++ b/code/saveload.pas
@@ -1,4 +1,20 @@
 unit saveload;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
 
 {***************************
    Save/Load Game and Utility Unit for IronSeed
diff --git a/code/scroller.asm b/code/scroller.asm
index 45998b8..2af7819 100644
--- a/code/scroller.asm
+++ b/code/scroller.asm
@@ -1,3 +1,19 @@
+;********************************************************************
+;    This file is part of Ironseed.
+;
+;    Ironseed is free software: you can redistribute it and/or modify
+;    it under the terms of the GNU General Public License as published by
+;    the Free Software Foundation, either version 3 of the License, or
+;    (at your option) any later version.
+;
+;    Ironseed is distributed in the hope that it will be useful,
+;    but WITHOUT ANY WARRANTY; without even the implied warranty of
+;    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+;    GNU General Public License for more details.
+;
+;    You should have received a copy of the GNU General Public License
+;    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+;********************************************************************
 
 ideal
 p486
diff --git a/code/shipmake.pas b/code/shipmake.pas
index 84ceaea..bde1db8 100644
--- a/code/shipmake.pas
+++ b/code/shipmake.pas
@@ -1,4 +1,20 @@
 program makeship;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
 
 type
  alienshiptype=
diff --git a/code/config.pas b/code/sndcfg.pas
similarity index 92%
rename from code/config.pas
rename to code/sndcfg.pas
index 31374a7..43b3f28 100644
--- a/code/config.pas
+++ b/code/sndcfg.pas
@@ -1,7 +1,24 @@
 program ConfigureFrinj;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
+
 {$M 2000,0,0}
 
-uses crt, win, strings, dos;
+uses crt, strings, dos;
 
 type
    configfile = 
diff --git a/code/starter.pas b/code/starter.pas
index febae7f..cfcfc38 100644
--- a/code/starter.pas
+++ b/code/starter.pas
@@ -1,4 +1,20 @@
 unit starter;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
 
 {***************************
    Initialization for IronSeed
diff --git a/code/usecode.pas b/code/usecode.pas
index 5638079..9d41358 100644
--- a/code/usecode.pas
+++ b/code/usecode.pas
@@ -1,4 +1,20 @@
 unit usecode;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
 
 {***************************
    Ship Display Initialization unit for IronSeed
diff --git a/code/utils.pas b/code/utils.pas
index 930e8d0..42759d1 100644
--- a/code/utils.pas
+++ b/code/utils.pas
@@ -1,4 +1,20 @@
 unit utils;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
 
 {***************************
    General Utilities for IronSeed
diff --git a/code/utils2.pas b/code/utils2.pas
index 2dfa859..05771f8 100644
--- a/code/utils2.pas
+++ b/code/utils2.pas
@@ -1,4 +1,20 @@
 unit utils2;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
 
 {***************************
    Overlayable Utilites for IronSeed
diff --git a/code/version.pas b/code/version.pas
index 130bfd2..5aba570 100644
--- a/code/version.pas
+++ b/code/version.pas
@@ -1,4 +1,20 @@
 unit version;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
 
 interface
 var
@@ -7,5 +23,5 @@ implementation
 begin
    versionstring :=
    {1234567890}
-   'v1.20.0016';
+   'v1.30.0001';
 end.
diff --git a/code/weird.pas b/code/weird.pas
index a1b7840..9d274fb 100644
--- a/code/weird.pas
+++ b/code/weird.pas
@@ -1,4 +1,20 @@
 unit weird;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
 
 {***************************
    CatchAll unit for IronSeed
diff --git a/crealist.txt b/crealist.txt
deleted file mode 100644
index e69de29..0000000
diff --git a/dmp/det_aria.pas b/dmp/det_aria.pas
index cb5bf4d..0c256b4 100644
--- a/dmp/det_aria.pas
+++ b/dmp/det_aria.pas
@@ -1,28 +1,5 @@
-(****************************************************************************
-
-                                 DET_ARIA.PAS
-                                 ------------
-
-                          (C) 1993 Jussi Lahdenniemi
-
-Turbo/Borland pascal unit header file for ARIA detection routines.
-Original C header by Otto Chrons
-
-****************************************************************************)
-
-Unit Det_Aria;
-{$F+}
-{$O+}
-
-Interface
-Uses MCP;
-
-Function detectARIA(sCard:PSoundCard):Integer;
-
-Implementation
-
-Function detectARIA(sCard:PSoundCard):Integer; External;
-
-{$L Detaria.obj}
-
-end.
+unit det_aria;
+{$O+}
+interface
+implementation
+end.
diff --git a/dmp/det_pas.pas b/dmp/det_pas.pas
index 563c59c..1388f04 100644
--- a/dmp/det_pas.pas
+++ b/dmp/det_pas.pas
@@ -1,28 +1,5 @@
-(****************************************************************************
-
-                                 DET_PAS.PAS
-                                 -----------
-
-                          (C) 1993 Jussi Lahdenniemi
-
-Turbo/Borland pascal unit header file for PAS detection routines.
-Original C header by Otto Chrons
-
-****************************************************************************)
-
-Unit Det_Pas;
-{$F+}
-{$O+}
-
-Interface
-Uses MCP;
-
-Function detectPAS(sCard:PSoundCard):Integer;
-
-Implementation
-
-Function detectPAS(sCard:PSoundCard):Integer; External;
-
-{$L Detpas.obj}
-
-end.
+unit det_pas;
+{$O+}
+interface
+implementation
+end.
diff --git a/dmp/det_sb.pas b/dmp/det_sb.pas
index 40f790a..6b7a4fd 100644
--- a/dmp/det_sb.pas
+++ b/dmp/det_sb.pas
@@ -1,32 +1,5 @@
-(****************************************************************************
-
-                                 DET_SB.PAS
-                                 ----------
-
-                          (C) 1993 Jussi Lahdenniemi
-
-Turbo/Borland pascal unit header file for SB detection routines.
-Original C header by Otto Chrons
-
-****************************************************************************)
-
-unit det_SB; { (C) 1993 Jussi Lahdenniemi }
-
-{$O+}
-
-interface
-uses MCP;
-
-Function  detectSB(SCard:PSoundCard):Integer;
-Function  detectSBpro(SCard:PSoundCard):Integer;
-Function  detectSB16(SCard:PSoundCard):Integer;
-
-implementation
-
-{$L detectSB.OBJ}
-
-Function  detectSB(SCard:PSoundCard):Integer; external;
-Function  detectSBpro(SCard:PSoundCard):Integer; external;
-Function  detectSB16(SCard:PSoundCard):Integer; external;
-
-end.
+unit det_sb;
+{$O+}
+interface
+implementation
+end.
diff --git a/dmp/detgus.pas b/dmp/detgus.pas
index 53aca93..42ce4d6 100644
--- a/dmp/detgus.pas
+++ b/dmp/detgus.pas
@@ -1,89 +1,5 @@
-{ -------------------------------------------------------------------------- }
-{                                                                            }
-{                                 DETGUS.PAS                                 }
-{                                 ----------                                 }
-{                                                                            }
-{                         (C) 1993 Jussi Lahdenniemi                         }
-{         Original C file (C) 1993 Otto Chrons                               }
-{                                                                            }
-{ Detect GUS                                                                 }
-{                                                                            }
-{ -------------------------------------------------------------------------- }
-
-unit detgus;
-
-{$O+}
-
-interface
-uses cdi,mcp;
-
-function detectGUS(scard:PSoundcard):integer;
-
-implementation
-uses dos;
-
-procedure strip(var s:string);
-begin
-  while (s[1]=' ') and (s[0]>#0) do delete(s,1,1);
-  while (s[length(s)]=' ') and (s[0]>#0) do dec(s[0]);
-end;
-
-function hex2dec(s:string):word;
-const hs:string='0123456789ABCDEF';
-var w,w2:word;
-begin
-  w:=0;
-  for w2:=1 to length(s) do
-    w:=w+(pos(s[w2],hs)-1) shl (4*(length(s)-w2));
-  hex2dec:=w;
-end;
-
-Function detectGUS(scard:PSoundcard):integer;
-var ptr           : pointer;
-    dummy,DMA,DMA2,
-    IRQ,IRQ2      : integer;
-    s,s2          : string;
-    w             : word;
-
-begin
-  s:=getenv('ULTRASND');
-  if s='' then begin detectGUS:=-1; exit end;
-  strip(s);
-  w:=pos(',',s);
-  s2:=copy(s,1,w-1);
-  delete(s,1,w);
-  scard^.ioPort:=hex2dec(s2);
-  strip(s);
-  w:=pos(',',s);
-  s2:=copy(s,1,w-1);
-  delete(s,1,w);
-  val(s2,DMA,dummy);
-  strip(s);
-  w:=pos(',',s);
-  s2:=copy(s,1,w-1);
-  delete(s,1,w);
-  val(s2,DMA2,dummy);
-  strip(s);
-  w:=pos(',',s);
-  s2:=copy(s,1,w-1);
-  delete(s,1,w);
-  val(s2,IRQ,dummy);
-  strip(s);
-  val(s,IRQ2,dummy);
-  scard^.dmaChannel:=DMA;
-  scard^.dmaIRQ:=IRQ;
-  s:='Gravis Ultrasound'#0;
-  move(s[1],scard^.name,length(s));
-  scard^.id:=ID_GUS;
-  scard^.minrate:=19293;
-  scard^.maxrate:=44100;
-  scard^.stereo:=true;
-  scard^.mixer:=true;
-  scard^.sampleSize:=1;
-  scard^.version:=$100;
-  scard^.extraField[0]:=DMA2;
-  scard^.extraField[1]:=IRQ2;
-  detectGUS:=0;
-end;
-
-end.
+unit detgus;
+{$O+}
+interface
+implementation
+end.
diff --git a/dmp/dsmistub.pas b/dmp/dsmistub.pas
new file mode 100644
index 0000000..74e0ead
--- /dev/null
+++ b/dmp/dsmistub.pas
@@ -0,0 +1,252 @@
+unit DSMISTUB;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
+(* This is just provides a stub for the DMP library. *)
+
+
+interface
+
+Uses detgus, det_aria, det_pas, det_sb, loaders, modload;
+
+Const
+   ID_SB	= 1;
+   ID_SBPRO	= 2;
+   ID_PAS	= 3;
+   ID_PASPLUS	= 4;
+   ID_PAS16	= 5;
+   ID_SB16	= 6;
+   ID_DAC	= 7;
+   ID_ARIA	= 8;
+   ID_WSS	= 9;
+   ID_GUS	= 10;   
+   LM_IML	= 1;
+   LM_OLDTEMPO	= 2;
+   MCP_QUALITY	= 1;
+   MCP_486	= 2;
+   MCP_Mono	= 4;
+   PM_Loop	= 1;
+   MD_Playing	= 1;
+   MD_Paused	= 2;
+   PAN_Left	= -63;
+   PAN_Right	= 63;
+   PAN_Middle	= 0;
+   PAN_Surround	= 100;
+	       
+
+Type
+   PModule = ^TModule;
+   TModule = Record
+		(*                           modType : Byte;
+		Size				     : Longint;
+		Filesize			     : Longint;
+		Name				     : Array[0..31] of char;*)
+		ChannelCount			     : Byte;
+		(*ChannelPanning			     : Array[0..Max_Tracks-1] of shortint;
+		InstrumentCount			     : Byte;
+		Instruments			     : ^AMInstr;*)
+		PatternCount			     : Byte;
+		(*Patterns			     : ^AMPattern;
+		TrackCount			     : Word;
+		Tracks				     : ^AMTracks;
+		Tempo				     : Byte;
+		Speed				     : Byte;*)
+	     End;				     
+PSampleinfo        = ^TSampleInfo;
+     TSampleInfo        = Record
+                            Sample      : Pointer;
+                            Length,
+                            Loopstart,
+                            Loopend     : Longint;
+                            Mode        : Byte;
+                            SampleID    : Word;
+                          End;
+
+PSoundCard        = ^TSoundCard;
+      TSoundCard        = Record
+                            ID          : Byte;
+                            version     : Word;
+                            name        : Array[0..31] of char;
+                            IOPort      : Word;
+                            dmaIRQ      : Byte;
+                            dmaChannel  : Byte;
+                            minRate     : Word;
+                            maxRate     : Word;
+                            Stereo      : Boolean;
+                            mixer       : Boolean;
+                            sampleSize  : Byte;
+                            extraField  : array[0..7] of byte;
+                          End;
+
+Function initDSMI(rate,buffer,options:longint;scard:PSoundcard;override:boolean):Integer;
+Function  mcpSetMasterVolume(Volume:longint):Integer;
+Function  gusSetMasterVolume(Volume:longint):Integer;
+Procedure mcpClearBuffer;
+Function  ampPlayModule(module:PModule;opt:longint):integer;
+Function  ampStopModule:integer;
+Procedure ampFreeModule(var module:PModule);
+Function ampLoadMOD(name:String;options:longint):PModule;
+Function  mcpStartVoice:Integer;
+Function  gusStartVoice:integer;
+Function  cdiSetupChannels(channel,count:longint;volTable:pointer):integer;
+Procedure cdiSetPan(channel:longint;pan:longint);
+Procedure mcpConvertSample(Sample:Pointer;Length:Longint);
+Function  mcpSetSample(Channel:longint;s:PSampleInfo):Integer;
+Function  mcpPlaySample(channel:longint;rate:Longint;volume:longint):Integer;
+Function  mcpPauseVoice:Integer;
+Function  mcpResumeVoice:Integer;
+Function  gusPauseAll:Integer;
+Function  gusResumeAll:Integer;
+Function  ampGetPattern:integer;
+Function  ampGetRow:integer;
+Function  ampGetModuleStatus:integer;
+Procedure ampSetPanning(track,direction:longint);
+Function GetCPUtype:Integer;
+Function  emsInit(minmem,maxmem:integer):integer;
+Function detectGUS(scard:PSoundcard):integer;
+Function detectAria(scard:PSoundcard):integer;
+Function detectSB16(scard:PSoundcard):integer;
+Function detectSBPro(scard:PSoundcard):integer;
+Function detectSB(scard:PSoundcard):integer;
+Function detectPAS(scard:PSoundcard):integer;
+
+implementation
+
+   Function initDSMI(rate,buffer,options:longint;scard:PSoundcard;override:boolean):Integer;
+   begin
+      initDSMI := 0;
+   end;
+
+   Function  mcpSetMasterVolume(Volume:longint):Integer;
+   begin
+      mcpSetMasterVolume := 0;
+   end;
+   Function  gusSetMasterVolume(Volume:longint):Integer;
+   begin
+      gusSetMasterVolume := 0;
+   end;
+   Procedure mcpClearBuffer;
+   begin
+   end;
+   Function  ampPlayModule(module:PModule;opt:longint):integer;
+   begin
+      ampPlayModule := 0;
+   end;
+   Function  ampStopModule:integer;
+   begin
+      ampStopModule := 0;
+   end;
+   Procedure ampFreeModule(var module:PModule);
+   begin
+      dispose(module);
+   end;
+   Function ampLoadMOD(name:String;options:longint):PModule;
+   var
+      module : PModule;
+   begin
+      new(module);
+      ampLoadMOD := module;
+   end;
+   Function  mcpStartVoice:Integer;
+   begin
+      mcpStartVoice := 0;
+   end;
+   Function  gusStartVoice:integer;
+   begin
+      gusStartVoice := 0;
+   end;
+   Function  cdiSetupChannels(channel,count:longint;volTable:pointer):integer;
+   begin
+      cdiSetupChannels := 0;
+   end;
+   Procedure cdiSetPan(channel:longint;pan:longint);
+   begin
+   end;
+   Procedure mcpConvertSample(Sample:Pointer;Length:Longint);
+   begin
+   end;
+   Function  mcpSetSample(Channel:longint;s:PSampleInfo):Integer;
+   begin
+      mcpSetSample := 0;
+   end;
+   Function  mcpPlaySample(channel:longint;rate:Longint;volume:longint):Integer;
+   begin
+      mcpPlaySample := 0;
+   end;
+   Function  mcpPauseVoice:Integer;
+   begin
+      mcpPauseVoice := 0;
+   end;
+   Function  gusPauseAll:Integer;
+   begin
+      gusPauseAll := 0;
+   end;
+   Function  mcpResumeVoice:Integer;
+   begin
+      mcpResumeVoice := 0;
+   end;
+   Function  gusResumeAll:Integer;
+   begin
+      gusResumeAll := 0;
+   end;
+   Function  ampGetPattern:integer;
+   begin
+      ampGetPattern := 0;
+   end;
+   Function  ampGetRow:integer;
+   begin
+      ampGetRow := 0;
+   end;
+   Function  ampGetModuleStatus:integer;
+   begin
+      ampGetModuleStatus := MD_PLAYING;
+   end;
+   Procedure ampSetPanning(track,direction:longint);
+   begin
+   end;
+   Function GetCPUtype:Integer;
+   begin
+      GetCPUtype := 0;
+   end;
+   Function  emsInit(minmem,maxmem:integer):integer;
+   begin
+      emsInit := 0;
+   end;
+   Function detectGUS(scard:PSoundcard):integer;
+   begin
+      detectGUS := 0;
+   end;
+   Function detectAria(scard:PSoundcard):integer;
+   begin
+      detectAria := 0;
+   end;
+   Function detectSB16(scard:PSoundcard):integer;
+   begin
+      detectSB16 := 0;
+   end;
+   Function detectSBPro(scard:PSoundcard):integer;
+   begin
+      detectSBPro := 0;
+   end;
+   Function detectSB(scard:PSoundcard):integer;
+   begin
+      detectSB := 0;
+   end;
+   Function detectPAS(scard:PSoundcard):integer;
+   begin
+      detectPAS := 0;
+   end;
+end.
diff --git a/dmp/emhm.pas b/dmp/emhm.pas
index 19fca0c..e471791 100644
--- a/dmp/emhm.pas
+++ b/dmp/emhm.pas
@@ -1,357 +1,4 @@
-Unit emhm; { (C) 1993 Jussi Lahdenniemi,
-             original C version (C) 1993 Otto Chrons
-
-             EMS Heap Manager }
-
-{$IFDEF DPMI}
-'Only in real mode!'
-{$ENDIF}
-
-{$X+}
-
-Interface
-
-const EMS_ERROR    = -1;
-      EMS_MEMORY   = -2;
-      EMS_PAGE     = -3;
-      EMS_HANDLE   = -4;
-
-type  TEMSH        = integer;
-
-Function  emsInit(minmem,maxmem:integer):integer;
-Procedure emsClose;
-Function  emsAlloc(size:longint):TEMSH;
-Procedure emsFree(handle:TEMSH);
-Function  emsLock(handle:TEMSH;start:longint;length:word):pointer;
-Function  emsCopyTo(handle:TEMSH;ptr:Pointer;start,length:longint):integer;
-Function  emsCopyFrom(ptr:Pointer;handle:TEMSH;start,length:longint):integer;
-Function  emsCopy(handleTo,handleFrom:TEMSH;start1,start2,length:longint):integer;
-Procedure emsSaveState;
-Procedure emsRestoreState;
-Function  emsHeapfree:longint;
-Procedure emsShowHeap;
-
-Implementation
-uses CSupport;
-
-{ Internal structures }
-
-const EMSMOVE_CONV    = 0;
-      EMSMOVE_EMS     = 1;
-
-type  PHandle         = ^THandle;
-      THandle         = record
-        handle        : TEMSH;
-        start,size    : longint;
-        next,prev     : PHandle;
-      end;
-
-      PEmsMove        = ^TEmsMove;
-      TEmsMove        = record          { Structure for memory moves }
-        size          : longint;        { to/from EMS                }
-        srcType       : byte;
-        srcHandle     : word;
-        srcOffset     : word;
-        srcSegment    : word;
-        destType      : byte;
-        destHandle    : word;
-        destOffset    : word;
-        destSegment   : word;
-      end;
-
-{ External low-level functions }
-
-{$F+}
-Function  _emsInit:integer; external;
-Function  _emsAllocPages(pages:integer):integer; external;
-Function  _emsMapPages(lpage,ppage:integer):integer; external;
-Procedure _emsSaveState; external;
-Procedure _emsRestoreState; external;
-Function  _emsQueryFree:integer; external;
-Function  _emsGetFrame:word; external;
-Procedure _emsMoveMem(move:PEmsMove); external;
-Procedure _emsClose; external;
-{$L EMSHARD.OBJ}
-{$F-}
-
-{ Internal varliables }
-
-const emsMax          : longint = 0;
-      emsMem          : longint = 0;
-      first           : PHandle = nil;
-      last            : PHandle = nil;
-      locked          : PHandle = nil;
-      status          : integer = 0;
-      physicalPages   : array[0..3] of integer = (0,0,0,0);
-      nextHandle      : TEMSH   = 0;
-      EMMname         : array[0..8] of char = ('E','M','M','X','X','X','X','0',#0);
-
-var   lowHandle       : integer;
-      frame           : pointer;
-
-{ EMS heap manager internal functions }
-
-Function findHandle(which:TEMSH):PHandle;
-var handle : PHandle;
-begin
-  handle:=first;
-  if which=0 then begin findHandle:=nil; exit end;
-  while (handle^.next<>nil) do begin
-    if handle^.handle=which then begin findHandle:=handle; exit end;
-    handle:=handle^.next;
-  end;
-  findHandle:=nil;
-end;
-
-{ EMS heap manager interface functions }
-
-Function  emsInit(minmem,maxmem:integer):integer;
-var a:word;
-Label noems,emsfound;
-begin
-  if status<>0 then begin emsInit:=EMS_ERROR; exit end;
-  asm
-        mov     ax,3d00h
-        mov     dx,offset EMMname
-        int     21h
-        jc      noems
-        mov     bx,ax
-        mov     ax,4400h
-        int     21h
-        pushf
-        mov     ax,3e00h
-        int     21h
-        popf
-        jc      noems
-        and     dx,80h
-        jz      noems
-        jmp     emsfound
-  end;
-noems:
-  emsInit:=EMS_ERROR;
-  exit;
-emsfound:
-  if _emsInit<>0 then begin emsInit:=EMS_ERROR; exit end;
-  emsMEM:=longint(maxmem)*1024;
-  a:=longint(_emsQueryFree)*16;
-  if a<minmem then begin emsInit:=EMS_MEMORY; exit end;
-  if a>maxmem then begin
-    lowHandle:=_emsAllocPages((maxmem+15) div 16);
-    if lowHandle<0 then begin emsInit:=EMS_MEMORY; exit end;
-  end else begin
-    lowHandle:=_emsAllocPages(a div 16);
-    if lowHandle<0 then begin emsInit:=EMS_MEMORY; exit end;
-    emsMem:=longint(a)*1024;
-  end;
-  new(first);
-  new(last);
-  with first^ do begin
-    handle:=0;
-    start:=0;
-    size:=0;
-    next:=last;
-    prev:=nil;
-  end;
-  with last^ do begin
-    handle:=0;
-    start:=emsMem;
-    size:=0;
-    next:=nil;
-    prev:=first;
-  end;
-  status:=1;
-  frame:=ptr(_emsGetFrame,0);
-  atExit(@emsClose);
-  emsInit:=0;
-end;
-
-Procedure emsClose;
-var handle,h:PHandle;
-begin
-  handle:=first;
-  if status<>1 then exit;
-  _emsClose;
-  status:=0;
-  while (handle<>nil) do begin
-    h:=handle^.next;
-    dispose(handle);
-    handle:=h;
-  end;
-end;
-
-Function  emsAlloc(size:longint):TEMSH;
-var newHandle,handle,best : PHandle;
-    bestSize,a,b          : longint;
-    align                 : integer;
-begin
-  handle:=first;
-  best:=first;
-  bestSize:=33554432; { 32 MB }
-  align:=0;
-  if status<>1 then begin emsAlloc:=-1; exit end;
-  size:=(size+15) and (not longint(15));
-  if size>=48*1024 then align:=1;
-  while handle^.next<>nil do begin
-    if align<>0 then a:=handle^.next^.start-(((handle^.start+16383) and (not longint(16383)))+handle^.size)
-      else a:=handle^.next^.start-(handle^.start+handle^.size);
-    if (a>size) and (a<bestSize) then begin
-      bestSize:=a;
-      best:=handle;
-    end;
-    handle:=handle^.next;
-  end;
-  if bestSize=33554432 then begin emsAlloc:=EMS_MEMORY; exit end;
-  new(newHandle);
-  newHandle^.next:=best^.next;
-  best^.next:=newHandle;
-  newHandle^.prev:=best;
-  newHandle^.next^.prev:=newHandle;
-  newHandle^.start:=best^.start+best^.size;
-  if align<>0 then newHandle^.start:=(newHandle^.start+16383) and (not longint(16383));
-  newHandle^.size:=size;
-  inc(nextHandle);
-  newHandle^.handle:=nextHandle;
-  emsAlloc:=nextHandle;
-end;
-
-Procedure emsFree(handle:TEMSH);
-var h:PHandle;
-begin
-  if status<>1 then exit;
-  h:=findHandle(handle);
-  if h=nil then exit;
-  h^.prev^.next:=h^.next;
-  h^.next^.prev:=h^.prev;
-  dispose(h);
-end;
-
-Function  emsLock(handle:TEMSH;start:longint;length:word):pointer;
-var h              : PHandle;
-    mapped         : longint;
-    page,pPage     : integer;
-    ptr            : Pointer;
-    tmp            : longint;
-begin
-  mapped:=0;
-  pPage:=0;
-  if status<>1 then begin emsLock:=nil; exit end;
-  h:=findHandle(handle);
-  if h=nil then begin emsLock:=nil; exit end;
-  if start>h^.size then begin emsLock:=nil; exit end;
-  if length+start>h^.size then length:=h^.size-start;
-  page:=longint(h^.start+start) div 16384;
-  tmp:=h^.start+start-longint(page)*16384;
-  ptr:=pointer(longint(seg(frame^)+tmp div 16)*longint(65536)+(tmp and longint($F)));
-  mapped:=16384-h^.start+start+longint(page)*16384;
-  _emsMapPages(page,pPage);
-  physicalPages[pPage]:=page;
-  while (length>mapped) and (pPage<3) do begin
-    inc(page);
-    inc(pPage);
-    _emsMapPages(page,pPage);
-    physicalPages[pPage]:=page;
-    inc(mapped,16384);
-  end;
-  emsLock:=ptr;
-end;
-
-Function  emsCopyTo(handle:TEMSH;ptr:Pointer;start,length:longint):integer;
-var h       : PHandle;
-    move    : TEMSMove;
-begin
-  if status<>1 then begin emsCopyTo:=-1; exit end;
-  h:=findHandle(handle);
-  if h=nil then begin emsCopyTo:=-4; exit end;
-  with move do begin
-    size:=length;
-    srcType:=EMSMOVE_CONV;
-    srcHandle:=0;
-    srcOffset:=ofs(ptr^);
-    srcSegment:=seg(ptr^);
-    destType:=EMSMOVE_EMS;
-    destHandle:=lowHandle;
-    destOffset:=(h^.start+start) and 16383;
-    destSegment:=(h^.start+start) div 16384;
-  end;
-  _emsMoveMem(@move);
-  emsCopyTo:=0;
-end;
-
-Function  emsCopyFrom(ptr:Pointer;handle:TEMSH;start,length:longint):integer;
-var h       : PHandle;
-    move    : TEMSMove;
-begin
-  if status<>1 then begin emsCopyFrom:=-1; exit end;
-  h:=findHandle(handle);
-  if h=nil then begin emsCopyFrom:=-4; exit end;
-  with move do begin
-    size:=length;
-    destType:=EMSMOVE_CONV;
-    destHandle:=0;
-    destOffset:=ofs(ptr^);
-    destSegment:=seg(ptr^);
-    srcType:=EMSMOVE_EMS;
-    srcHandle:=lowHandle;
-    srcOffset:=(h^.start+start) and 16383;
-    srcSegment:=(h^.start+start) div 16384;
-  end;
-  _emsMoveMem(@move);
-  emsCopyFrom:=0;
-end;
-
-Function  emsCopy(handleTo,handleFrom:TEMSH;start1,start2,length:longint):integer;
-var h1,h2   : PHandle;
-    move    : TEMSMove;
-begin
-  if status<>1 then begin emsCopy:=-1; exit end;
-  h1:=findHandle(handleTo);
-  if h1=nil then begin emsCopy:=-4; exit end;
-  h2:=findHandle(handleFrom);
-  if h2=nil then begin emsCopy:=-4; exit end;
-  with move do begin
-    size:=length;
-    destType:=EMSMOVE_EMS;
-    destHandle:=lowHandle;
-    destOffset:=(h1^.start+start1) and 16383;
-    destSegment:=(h1^.start+start1) div 16384;
-    srcType:=EMSMOVE_EMS;
-    srcHandle:=lowHandle;
-    srcOffset:=(h2^.start+start2) and 16383;
-    srcSegment:=(h2^.start+start2) div 16384;
-  end;
-  _emsMoveMem(@move);
-  emsCopy:=0;
-end;
-
-Procedure emsSaveState;
-begin
-  if status<>1 then exit;
-  _emsSaveState;
-end;
-
-Procedure emsRestoreState;
-begin
-  if status<>1 then exit;
-  _emsRestoreState;
-end;
-
-Function  emsHeapfree:longint;
-begin
-  if status<>1 then begin emsHeapfree:=0; exit end;
-  emsHeapfree:=longint(_emsQueryFree)*16384;
-end;
-
-Procedure emsShowHeap; { Debugging function }
-var h:PHandle;
-begin
-  h:=first;
-  if status<>1 then exit;
-  writeln('EMS Heap:');
-  while h^.next<>nil do begin
-    with h^ do
-      writeln('Start: ',start,', size: ',size,', end: ',start+size);
-    h:=h^.next;
-  end;
-end;
-
-end.
+unit emhm;
+interface
+implementation
+end.
diff --git a/dmp/getcpu.pas b/dmp/getcpu.pas
index 8c43a24..2e1ed43 100644
--- a/dmp/getcpu.pas
+++ b/dmp/getcpu.pas
@@ -1,17 +1,5 @@
-Unit GetCPU;
-{$O+}
-
-Interface
-
-Function GetCPUtype:Integer;
-Function inV86:Boolean;
-
-Implementation
-
-Function GetCPUtype; External;
-Function inV86:Boolean; External;
-
-{$L GETCPU.OBJ}
-{$L CHECKV86.OBJ}
-
-end.
+unit getcpu;
+{$O+}
+interface
+implementation
+end.
diff --git a/dmp/loaders.pas b/dmp/loaders.pas
index a458eb0..b9cddb8 100644
--- a/dmp/loaders.pas
+++ b/dmp/loaders.pas
@@ -1,73 +1,5 @@
-(***************************************************************************
-
-                                 LOADERS.PAS
-                                 -----------
-
-                          (C) 1993 Jussi Lahdenniemi
-
-ampFreeModule function and order constants
-
-***************************************************************************)
-
-Unit Loaders;
-
-{$O+}
-
-Interface
-uses AMP, CSupport, crt
- {$IFDEF USE_EMS} ,emhm {$ENDIF};
-
-Var LoadOptions : Integer;
-
-const order4:array[0..3] of shortint = (PAN_Left,PAN_Right,PAN_Right,PAN_Left);
-      order6:array[0..5] of shortint = (PAN_Left,PAN_Right,PAN_Right,PAN_Left,PAN_Left,PAN_Right);
-      order8:array[0..7] of shortint = (PAN_Left,PAN_Right,PAN_Right,PAN_Left,PAN_Left,PAN_Right,PAN_Right,PAN_Left);
-
-Procedure ampFreeModule(var module:PModule);
-
-Implementation
-
-Procedure ampFreeModule;
-var t,i   : integer;
-    ptr   : pointer;
-Begin
-  if module=nil then exit;
-  if module^.modType<>0 then begin
-    if module^.patterns<>nil then free(pointer(module^.patterns));
-    if module^.instruments<>nil then begin
-      if module^.instrumentCount>0 then
-      for t:=0 to module^.instrumentCount-1 do
-        begin
-         ptr:=module^.instruments^[t].sample;
-{$IFDEF USE_EMS}
-         if seg(ptr^)=$FFFF then emsfree(ofs(ptr^))
-         else
-{$ENDIF} if ptr<>nil then
-          begin
-           if t>0 then
-            for i:=0 to t-1 do
-             if ptr=module^.instruments^[i].sample then begin ptr:=nil; i:=t-1 end;
-           if ptr<>nil then free(ptr);
-          end;
-        end;
-      free(pointer(module^.instruments));
-    end;
-    if module^.tracks<>nil then begin
-      for t:=1 to module^.trackCount do begin
-        ptr:=module^.tracks^[t];
-        if t>1 then
-        for i:=1 to t-1 do
-          if ptr=module^.tracks^[i] then begin
-            ptr:=nil;
-            i:=t-1;
-          end;
-        if ptr<>nil then free(ptr);
-      end;
-      free(pointer(module^.tracks));
-    end;
-  end;
-  free(module);
-  module:=nil;
-end;
-
-end.
+unit loaders;
+{$O+}
+interface
+implementation
+end.
diff --git a/dmp/mcp.pas b/dmp/mcp.pas
index f911d21..432d90c 100644
--- a/dmp/mcp.pas
+++ b/dmp/mcp.pas
@@ -1,243 +1,5 @@
-(****************************************************************************
-
-                                   MCP.PAS
-                                   -------
-
-                          (C) 1993 Jussi Lahdenniemi
-
-Turbo/Borland pascal unit header file for MCP.
-Original C header by Otto Chrons
-
-****************************************************************************)
-
-Unit MCP;
-{$F+,R-}
-
-Interface
-uses CDI;
-
-Type PSampleinfo        = ^TSampleInfo;
-     TSampleInfo        = Record
-                            Sample      : Pointer;
-                            Length,
-                            Loopstart,
-                            Loopend     : Longint;
-                            Mode        : Byte;
-                            SampleID    : Word;
-                          End;
-
-      PSoundCard        = ^TSoundCard;
-      TSoundCard        = Record
-                            ID          : Byte;
-                            version     : Word;
-                            name        : Array[0..31] of char;
-                            IOPort      : Word;
-                            dmaIRQ      : Byte;
-                            dmaChannel  : Byte;
-                            minRate     : Word;
-                            maxRate     : Word;
-                            Stereo      : Boolean;
-                            mixer       : Boolean;
-                            sampleSize  : Byte;
-                            extraField  : array[0..7] of byte;
-                          End;
-
-      TSoundDevice      = Record
-                            InitDevice,
-                            InitOutput,
-                            InitRate,
-                            CloseDevice,
-                            CloseOutput,
-                            StopOutput,
-                            PauseOutput,
-                            ResumeOutput,
-                            GetBufferPos,
-                            SpeakerOn,
-                            SpeakerOff  : Pointer;
-                          End;
-
-      PMCPstruct        = ^TMCPstruct;
-      TMCPstruct        = Record
-                            SamplingRate: Word;
-                            Options     : Word;
-                            bufferSeg   : Word;
-                            bufferLinear: Longint;
-                            bufferSize  : Word;
-                            reqSize     : Word;
-                          End;
-
-      PMCPoutput        = ^TMCPoutput;
-      TMCPoutput        = Record
-                            position    : Word;
-                            start       : pointer;
-                            length      : Word;
-                          end;
-
-Const initStatus:BYTE=0;
-      channelCount:WORD=0;
-      dataBuf:WORD=0;
-
-Var SOUNDCARD:TSoundCard;
-    bufferSize:WORD;
-    mcpStatus:Byte;
-
-Type TSDI_Init          = Procedure;
-
-Const ID_SB               = 1;
-      ID_SBPRO            = 2;
-      ID_PAS              = 3;
-      ID_PASPLUS          = 4;
-      ID_PAS16            = 5;
-      ID_SB16             = 6;
-      ID_DAC              = 7;
-      ID_ARIA             = 8;
-      ID_WSS              = 9;
-      ID_GUS              = 10;
-
-      MCP_QUALITY         = 1;
-      MCP_486             = 2;
-      MCP_Mono            = 4;
-      MCP_TableSize       = 33*256*2+32;
-      MCP_QualitySize     = 2048*2+4096+16;
-
-      volume_Linear       = 1;
-      volume_Any          = 255;
-
-      sample_Continue     = 1;
-
-      CH_Playing          = 1;
-      CH_Looping          = 2;
-      CH_Paused           = 4;
-      CH_Valid            = 8;
-
-      PAN_Left            = -63;
-      PAN_Right           = 63;
-      PAN_Middle          = 0;
-      PAN_Surround        = 100;
-
-Function  mcpInit(MCPstruct:PMCPstruct):Integer;
-Function  mcpInitSoundDevice(sdi:TSDI_Init;SCard:PSoundCard):Integer;
-Procedure mcpClose;
-Procedure mcpOpenSpeaker;
-Procedure mcpCloseSpeaker;
-Function  mcpSetupChannels(Channels:longint;volTable:Pointer):Integer;
-Function  mcpStartVoice:Integer;
-Function  mcpStopVoice:Integer;
-Function  mcpPauseVoice:Integer;
-Function  mcpResumeVoice:Integer;
-Function  mcpGetDelta:Longint;
-Procedure mcpPoll(time:Longint);
-Procedure mcpClearBuffer;
-Function  mcpPauseChannel(Channel:longint):Integer;
-Function  mcpResumeChannel(Channel:longint):Integer;
-Function  mcpStopChannel(Channel:longint):Integer;
-Function  mcpPauseAll:Integer;
-Function  mcpResumeAll:Integer;
-Function  mcpGetChannelStatus(Channel:longint):Integer;
-Function  mcpGetChannelCount:Integer;
-Function  mcpSetSample(Channel:longint;s:PSampleInfo):Integer;
-Function  mcpPlaySample(channel:longint;rate:Longint;volume:longint):Integer;
-Function  mcpSetVolume(Channel:longint;Volume:longint):Integer;
-Function  mcpGetVolume(channel:longint):Word;
-Function  mcpGetPosition(channel:longint):Longint;
-Function  mcpGetSample(channel:longint):Pointer;
-Function  mcpGetRate(channel:longint):Longint;
-Function  mcpGetPanning(channel:longint):integer;
-Function  mcpSetRate(Channel:longint;Rate:Longint):Integer;
-Function  mcpSetPosition(Channel:longint;Position:Longint):Integer;
-Procedure mcpSetPanning(channel,panning:longint);
-Function  mcpSetSamplingRate(Sampling_Rate:longint):Integer;
-Function  mcpGetSamplingRate:Word;
-Function  mcpSetMasterVolume(Volume:longint):Integer;
-Procedure mcpConvertSample(Sample:Pointer;Length:Longint);
-Function  mcpGetOutput:PMCPoutput;
-
-Procedure mcpCalibrate; interrupt;
-Function  mcpCalibrateInit(delta,accuracy:longint):Integer;
-Procedure mcpCalibrateClose;
-
-Procedure nullfunction;
-Procedure mcpDownload;
-Procedure mcpUnloadAll;
-
-Const CDI_MCP : TCDIdevice = (
-    setsample        : @mcpSetSample;
-    playsample       : @mcpPlaySample;
-    setvolume        : @mcpSetVolume;
-    setfrequency     : @mcpSetRate;
-    setlinearrate    : @nullFunction;
-    setposition      : @mcpSetPosition;
-    setpanning       : @mcpSetPanning;
-    setmastervolume  : @mcpSetMasterVolume;
-    pausechannel     : @mcpPauseChannel;
-    resumechannel    : @mcpResumeChannel;
-    stopchannel      : @mcpStopChannel;
-    pauseall         : @mcpPauseAll;
-    resumeall        : @mcpResumeAll;
-    poll             : @mcpPoll;
-    getdelta         : @mcpGetDelta;
-    download         : @mcpDownload;
-    unload           : @mcpUnloadAll;
-    getvolume        : @mcpGetVolume;
-    getfrequency     : @mcpGetRate;
-    getposition      : @mcpGetPosition;
-    getpan           : @mcpGetPanning;
-    getsample        : @mcpGetSample;
-    setupch          : @mcpSetupChannels);
-
-Implementation
-{$IFDEF USE_EMS}
-uses mcpems;
-{$ELSE}
-uses mcpreala;
-{$ENDIF}
-
-{$L MCPlayer.OBJ}
-{$L CONVSAMP.OBJ}
-
-Function  mcpInit(MCPstruct:PMCPstruct):Integer; external;
-Function  mcpInitSoundDevice(sdi:TSDI_Init;SCard:PSoundCard):Integer; external;
-Procedure mcpClose; external;
-Procedure mcpOpenSpeaker; external;
-Procedure mcpCloseSpeaker; external;
-Function  mcpSetupChannels(Channels:longint;volTable:Pointer):Integer; external;
-Function  mcpStartVoice:Integer; external;
-Function  mcpStopVoice:Integer; external;
-Function  mcpPauseVoice:Integer; external;
-Function  mcpResumeVoice:Integer; external;
-Function  mcpGetDelta:Longint; external;
-Procedure mcpPoll(time:Longint); external;
-Procedure mcpClearBuffer; external;
-Function  mcpPauseChannel(Channel:longint):Integer; external;
-Function  mcpResumeChannel(Channel:longint):Integer; external;
-Function  mcpStopChannel(Channel:longint):Integer; external;
-Function  mcpPauseAll:Integer; external;
-Function  mcpResumeAll:Integer; external;
-Function  mcpGetChannelStatus(Channel:longint):Integer; external;
-Function  mcpGetChannelCount:Integer; external;
-Function  mcpSetSample(Channel:longint;s:PSampleInfo):Integer; external;
-Function  mcpPlaySample(channel:longint;rate:Longint;volume:longint):Integer; external;
-Function  mcpSetVolume(Channel:longint;Volume:longint):Integer; external;
-Function  mcpGetVolume(channel:longint):Word; external;
-Function  mcpGetPosition(channel:longint):Longint; external;
-Function  mcpGetSample(channel:longint):Pointer; external;
-Function  mcpGetRate(channel:longint):Longint; external;
-Function  mcpGetPanning(channel:longint):integer; external;
-Function  mcpSetRate(Channel:longint;Rate:Longint):Integer; external;
-Function  mcpSetPosition(Channel:longint;Position:Longint):Integer; external;
-Procedure mcpSetPanning(channel,panning:longint); external;
-Function  mcpSetSamplingRate(Sampling_Rate:longint):Integer; external;
-Function  mcpGetSamplingRate:Word; external;
-Function  mcpSetMasterVolume(Volume:longint):Integer; external;
-Procedure mcpConvertSample(Sample:Pointer;Length:Longint); external;
-Function  mcpGetOutput:PMCPoutput; external;
-
-Procedure mcpCalibrate; external;
-Function  mcpCalibrateInit(delta,accuracy:longint):Integer; external;
-Procedure mcpCalibrateClose; external;
-
-Procedure nullfunction; external;
-Procedure mcpDownload; external;
-Procedure mcpUnloadAll; external;
-
-end.
+unit MCP;
+
+interface
+implementation
+end.
diff --git a/dmp/modload.pas b/dmp/modload.pas
index 441b7ea..a063777 100644
--- a/dmp/modload.pas
+++ b/dmp/modload.pas
@@ -1,586 +1,5 @@
-(***************************************************************************
-
-                                 MODLOAD.PAS
-                                 -----------
-
-                          (C) 1993 Jussi Lahdenniemi
-
-loadMOD and ampLoadMOD functions
-Original C version by Otto Chrons
-
-***************************************************************************)
-
-
-Unit MODLoad; {$I-,X+}
-
-{$O+}
-
-Interface
-Uses MCP,AMP,Loaders,CSupport;
-
-Function LoadMOD(Var File_:File;Var Module:PModule):Integer;
-Function ampLoadMOD(name:String;options:longint):PModule;
-
-Const modNotes : Array[0..60] of word =
-        ( 1712,1616,1524,1440,1356,1280,1208,1140,1076,1016,960,912,
-          856,808,762,720,678,640,604,570,538,508,480,453,
-          428,404,381,360,339,320,302,285,269,254,240,226,
-          214,202,190,180,170,160,151,143,135,127,120,113,
-          107,101,95,90,85,80,75,71,67,63,60,56,0 );
-
-Implementation
-{$IFDEF USE_EMS}
-uses emhm;
-{$ENDIF}
-
-Var curTrack            : Integer;
-    patUsed             : Array[0..254] of byte;
-
-Const instrRates        : array[0..15] of word =
-                          (856,850,844,838,832,826,820,814,
-                           907,900,894,887,881,875,868,862);
-
-      Basic_Freq        = 8368;
-
-Type TMODinst           = Record
-                            Name        : Array[0..21] of char;
-                            Length      : Word;
-                            Finetune    : Byte;
-                            Volume      : byte;
-                            Loopstart   : Word;
-                            Looplength  : Word;
-                          End;
-
-Function swapb(w:word):word; Assembler;
-asm
-       Mov  ax,[w]
-       Xchg al,ah
-end;
-
-Function loadInstruments(Var f:File;Var Module:PModule):Integer;
-Var t,a          : Integer;
-    b            : word;
-    MODi         : TMODinst;
-    instr        : PInstrument;
-
-Begin
-  With Module^ do begin
-    if module^.modType=MOD_15 then instrumentCount:=15 else InstrumentCount:=31;
-    instruments:=calloc(31,sizeof(TInstrument));
-    If instruments=Nil then begin loadInstruments:=MERR_MEMORY; exit end;
-    Size:=Size+instrumentCount*sizeof(TInstrument);
-    Seek(f,20);
-    a:=1;
-    t:=0;
-    while (a=1) and (t<instrumentCount) do begin
-      Blockread(f,MODi,sizeof(TMODinst),a);
-      if a<>sizeOf(TMODinst) then a:=-1 else a:=1;
-      instr:=@instruments^[t];
-      instr^.insType:=0;
-      MODi.name[21]:=#0;
-      strcpy(instr^.name,MODi.name);
-      strncpy(instr^.filename,MODi.name,12);
-      instr^.filename[12]:=#0;
-      instr^.sample:=nil;
-      instr^.rate:=856*Basic_Freq div instrRates[MODi.finetune and $F];
-      instr^.volume:=MODi.volume;
-      if instr^.volume>64 then instr^.volume:=64;
-      instr^.size:=swapb(MODi.length)*2;
-      instr^.loopstart:=swapb(MODi.loopstart)*2;
-      b:=swapb(MODi.looplength)*2;
-      if b<3 then b:=0 else b:=b+instr^.loopstart;
-      instr^.loopend:=b;
-      if (instr^.loopend>instr^.size) and (instr^.loopend<>0) then
-         instr^.loopend:=instr^.size;
-      if instr^.loopstart>instr^.loopend then instr^.loopend:=0;
-      if instr^.loopend=0 then instr^.loopstart:=0;
-      inc(t);
-    end;
-  end;
-  if a<>1 then loadInstruments:=MERR_FILE else loadInstruments:=MERR_NONE;
-end;
-
-Function loadPatterns(Var f:file; module:PModule):Integer;
-Var orders       : Array[0..127] of byte;
-    ptr          : pointer;
-    a,t,i        : Integer;
-    pat          : PPattern;
-    count        : Integer;
-    lastPattern  : Integer;
-
-Begin
-  count:=0;
-  lastPattern:=0;
-  Fillchar(patUsed,255,0);
-  Seek(f,20+module^.instrumentCount*30);
-  Blockread(f,count,1);
-  Blockread(f,orders,1);
-  Blockread(f,orders,128);
-  for t:=0 to 127 do if lastPattern<orders[t] then lastPattern:=orders[t];
-  inc(lastPattern);
-  module^.patternCount:=count;
-  module^.trackCount:=lastPattern*module^.channelCount;
-  module^.patterns:=calloc(count,sizeof(TPattern));
-  loadPatterns:=MERR_MEMORY;
-  if module^.patterns=nil then exit;
-  inc(module^.size,count*sizeof(TPattern));
-  if count>0 then
-  for t:=0 to count-1 do begin
-    patUsed[orders[t]]:=1;
-    pat:=@module^.patterns^[t];
-    pat^.length:=64;
-    for i:=0 to module^.channelCount-1 do
-      pat^.tracks[i]:=pointer(orders[t]*module^.channelCount+1+i);
-  end;
-  loadPatterns:=MERR_NONE;
-end;
-
-Function MOD2AMF(buffer:pointer;trk:Integer; module:PModule):PTrack;
-Type b = Array[0..65519] of byte;
-Var tracks: PTrack;
-    i,t,pos,tick,a,rowAdd: Integer;
-    note,noNote,oldNote,ins,volume,command,data,curins,curvolume : Byte;
-    nvalue: Word;
-    Temptrack: Array[0..575] of byte;
-
-Procedure insertNote(a,b:integer);
-Begin
-  temptrack[pos*3]:=tick;
-  temptrack[pos*3+1]:=a;
-  temptrack[pos*3+2]:=b;
-  inc(pos);
-end;
-
-Procedure insertCmd(a,b:integer);
-Begin
-  temptrack[pos*3]:=tick;
-  temptrack[pos*3+1]:=a;
-  temptrack[pos*3+2]:=b;
-  inc(pos);
-end;
-
-Begin
-  pos:=0;
-  tick:=0;
-  ins:=0;
-  oldNote:=0;
-  curins:=$F0;
-  inc(longint(buffer),trk*4);
-  Fillchar(temptrack,576,$FF);
-  rowAdd:=4*module^.channelCount;
-  for t:=0 to 63 do begin
-    tick:=t;
-    note:=$FF;
-    noNote:=0;
-    nvalue:=(b(buffer^)[t*rowAdd] and $F)*256+b(buffer^)[t*rowAdd+1];
-    if nvalue<>0 then for i:=0 to 60 do
-      if (nvalue>=modNotes[i]) then
-       begin
-        note:=i+36;
-        i:=60;
-       end;
-    command:=(b(buffer^)[t*rowAdd+2] and $f);
-    data:=b(buffer^)[t*rowAdd+3];
-    volume:=255;
-    if command=$C then begin
-      volume:=data;
-      if volume>64 then volume:=64;
-    end;
-    ins:=(b(buffer^)[t*rowAdd+2] shr 4) or (b(buffer^)[t*rowAdd] and $10);
-    if ins<>0 then
-     begin
-      dec(ins);
-      if ins<>curIns then
-       begin
-        insertCmd(cmdInstr,ins);
-        module^.instruments^[ins].insType:=1;
-       end
-        else if (note=$ff) and (volume>64) then
-         begin
-          insertCmd(cmdVolumeAbs,module^.instruments^[ins].volume);
-          insertCmd(cmdOffset,0);
-         end;
-      curIns:=ins;
-      inc(ins);
-     end;
-    if (command=$e) and (data shr 4=$d) and (data and $f<>0) and (note<>$ff) then
-     begin
-      insertCmd(cmdNoteDelay,data and $f);
-      command:=$ff;
-     end;
-    if command=3 then
-     begin
-      insertCmd(cmdBenderTo,data);
-      command:=$ff;
-     end;
-    if note<>$FF then
-     begin
-      dec(ins);
-      if (ins<>$ff) and (command<>$c) then
-        volume:=module^.instruments^[ins].volume;
-      insertNote(note,volume);
-     end
-     else if volume<65 then insertCmd(cmdVolumeAbs,volume);
-    case command of
-      $f : if (data>0) and (data<32) then insertCmd(cmdTempo,data)
-             else insertCmd(cmdExtTempo,data);
-      $b : insertCmd(cmdGoto,data);
-      $d : insertCmd(cmdBreak,0);
-      $a : begin
-            if (data>15) then data:=data div 16 else data:=-data;
-            insertCmd(cmdVolume,data);
-           end;
-      $2 : if data<>0 then
-            begin
-             if (data>127) then data:=127;
-             insertCmd(cmdBender,data);
-            end;
-      $1 : if data<>0 then
-            begin
-             if (data>127) then data:=127;
-             insertCmd(cmdBender,-data);
-            end;
-      $4 : insertCmd(cmdVibrato,data);
-      $5 : begin
-             if data>15 then data:=data div 16 else data:=-data;
-             insertCmd(cmdToneVol,data);
-           end;
-      $6 : begin
-             if data>15 then data:=data div 16 else data:=-data;
-             insertCmd(cmdVibrVol,data);
-           end;
-      $7 : insertCmd(cmdTremolo,data);
-      $0 : if data<>0 then insertCmd(cmdArpeggio,data);
-      $8 : insertCmd(cmdPan,data-64);
-      $9 : insertCmd(cmdOffset,data);
-      $e : begin
-            i:=data shr 4;
-            data:= data and $f;
-            case i of
-             $9 : insertCmd(cmdRetrig,data);
-             $1 : insertCmd(cmdFinetune,-data);
-             $2 : insertCmd(cmdFinetune,data);
-             $a : insertCmd(cmdFinevol,data);
-             $b : insertCmd(cmdFinevol,-data);
-             $c : insertCmd(cmdNoteCut,data);
-             $d : insertCmd(cmdnotedelay,data);
-             $8 : insertCmd(cmdsync,data);
-            end;
-          end;
-    end;
-  end;
-  if pos=0 then tracks:=nil else begin
-    inc(pos);
-    if (loadOptions and LM_IML)>0 then
-      if curTrack>1 then
-       for i:=1 to curTrack-1 do
-        if module^.tracks^[i]<>nil then
-        if (module^.tracks^[i]^.size=pos) and
-           (memcmp(@temptrack,pointer(longint(module^.tracks^[i])+3),pos*3)=0) then begin
-             MOD2AMF:=module^.tracks^[i];
-             exit;
-           end;
-    tracks:=PTrack(malloc(pos*3+3));
-    if tracks<>nil then
-     begin
-      inc(module^.size,pos*3+3);
-      tracks^.size:=pos;
-      tracks^.trkType:=0;
-      move(temptrack,pointer(longint(tracks)+3)^,pos*3);
-     end;
-  end;
-  MOD2AMF:=tracks;
-end;
-
-Function loadTracks(Var f:file;var module:PModule):Integer;
-Var Count    : Byte;
-    t,i,a,c  : Integer;
-    Buffer   : Array[0..2047] of byte;
-
-Begin
-  a:=module^.channelCount;
-  count:=module^.trackCount div a;
-  module^.tracks:=calloc(count*a+4,sizeof(PTrack));
-  if module^.tracks=nil then begin loadTracks:=MERR_MEMORY; exit end;
-  inc(module^.size,(count*a+4)*sizeof(PTrack));
-  seek(f,20+30*module^.instrumentCount+128+2+byte(module^.instrumentCount<>15)*4);
-  module^.tracks^[0]:=nil;
-  curTrack:=1;
-  if count>0 then
-  for t:=0 to count-1 do begin
-    if ((loadOptions and LM_IML)>0) and (patUsed[t]=0) then begin
-      for i:=0 to module^.channelCount-1 do begin
-        module^.tracks^[curTrack]:=nil; inc(curTrack) end;
-      seek(f,filepos(f)+256*module^.channelCount);
-    end else
-      if (module^.modType=MOD_MOD) or (module^.modType=MOD_15) then begin
-        c:=module^.channelCount;
-        blockread(f,buffer,256*c,a);
-        if a=256*c then
-          for i:=0 to c-1 do begin
-            module^.tracks^[curTrack]:=MOD2AMF(@buffer,i,module);
-            inc(curTrack);
-          end else begin
-            loadTracks:=MERR_FILE;
-            exit;
-          end;
-      end else if (module^.channelCount=8) and (module^.modType=MOD_TREK) then begin
-        Blockread(f,buffer,1024);
-        if IOresult=0 then begin
-          module^.tracks^[curTrack]:=MOD2AMF(@buffer,0,module); inc(curTrack);
-          module^.tracks^[curTrack]:=MOD2AMF(@buffer,1,module); inc(curTrack);
-          module^.tracks^[curTrack]:=MOD2AMF(@buffer,2,module); inc(curTrack);
-          module^.tracks^[curTrack]:=MOD2AMF(@buffer,3,module); inc(curTrack);
-        end else begin
-          loadTracks:=MERR_FILE;
-          exit;
-        end;
-        Blockread(f,buffer,1024);
-        if IOresult=0 then begin
-          module^.tracks^[curTrack]:=MOD2AMF(@buffer,0,module); inc(curTrack);
-          module^.tracks^[curTrack]:=MOD2AMF(@buffer,1,module); inc(curTrack);
-          module^.tracks^[curTrack]:=MOD2AMF(@buffer,2,module); inc(curTrack);
-          module^.tracks^[curTrack]:=MOD2AMF(@buffer,3,module); inc(curTrack);
-        end else begin
-          loadTracks:=MERR_FILE;
-          exit;
-        end;
-      end;
-  end;
-  loadTracks:=MERR_NONE;
-end;
-
-Function loadSamples(var f:file; var module:PModule):integer;
-Var t,i,a,b,l     : Word;
-   c             : Longint;
-   instr         : PInstrument;
-   {temp          : Array[0..31] of byte;}
-   {$IFDEF USE_EMS}
-   handle        : TEMSH;
-   tempbuf       : Pointer;
-   offset        : Longint;
-   remaining     : Longint;
-   {$ENDIF}
-Begin
-   seek(f,20+30*module^.instrumentCount+128+2+4*byte(module^.instrumentCount<>15)+longint(module^.trackCount)*256);
-   for t:=0 to module^.instrumentCount-1 do
-   begin
-      instr:=@module^.instruments^[t];
-      if ((loadOptions and LM_IML)>0) and (instr^.insType=0) then
-      begin
-	 seek(f,filepos(f)+instr^.size);
-	 instr^.size:=0;
-      end;
-      if instr^.size>0 then
-      begin
-	 a:=instr^.loopend-instr^.loopstart;
-	 if (instr^.loopend<>0) and (a<crit_size) then
-	 begin
-	    b:=(Crit_Size div a)*a;
-	    instr^.loopend:=instr^.loopstart+b;
-	    loadSamples:=MERR_MEMORY;
-	    instr^.sample:=malloc(instr^.loopend);
-	    if instr^.sample=nil then exit;
-	    inc(module^.size,instr^.loopend);
-	    if instr^.size>instr^.loopend then
-	    begin
-	       loadSamples:=MERR_FILE;
-	       blockread(f,instr^.sample^,instr^.loopend);
-	       if IOresult<>0 then exit;
-	       seek(f,filepos(f)+instr^.size-instr^.loopend);
-	    end
-	    else
-	    begin
-	       loadSamples:=MERR_FILE;
-	       blockread(f,instr^.sample^,instr^.size);
-	       if IOresult<>0 then exit;
-	    end;
-	    instr^.size:=instr^.loopend;
-	    for i:=1 to (Crit_Size div a)-1 do
-	       move(pointer(longint(instr^.sample)+instr^.loopstart)^,
-		    pointer(longint(instr^.sample)+instr^.loopstart+a*i)^,a);
-	 end
-	 else
-	 begin
-	    {$IFNDEF USE_EMS}
-	    if instr^.size>65510 then a:=65510 else a:=instr^.size;
-	    instr^.sample:=malloc(a);
-	    loadSamples:=MERR_MEMORY;
-	    if instr^.sample=nil then exit;
-	    inc(module^.size,a);
-	    loadSamples:=MERR_CORRUPT;
-	    blockread(f,instr^.sample^,a);
-	    if IOresult<>0 then exit;
-	    if a<instr^.size then
-	    begin
-	       {blockread(f,temp,instr^.size-a);}
-	       Seek(f, FilePos(f) + instr^.size-a);
-	       instr^.size:=a;
-	    end;
-	    mcpConvertSample(instr^.sample,instr^.size);
-	    {$ELSE} {USE_EMS}
-	    handle:=emsAlloc(instr^.size);
-	    if handle <= 0 then
-	    begin
-	       loadSamples:=MERR_MEMORY;
-	       exit;
-	    end;
-	    tempbuf := malloc(1024);
-	    if tempbuf = nil then
-	    begin
-	       emsFree(handle);
-	       loadSamples:=MERR_MEMORY;
-	       exit;
-	    end;
-	    offset := 0;
-	    remaining := instr^.size;
-	    while remaining > 0 do
-	    begin
-	       if remaining > 1024 then begin a := 1024; end else begin a := remaining; end;
-	       blockread(f, tempbuf^, a);
-	       if IOresult<>0 then
-	       begin
-		  emsFree(handle);
-		  free(tempbuf);
-		  loadSamples:=MERR_FILE;
-		  exit;
-	       end;
-	       mcpConvertSample(tempbuf, a);
-	       emsCopyTo(handle, tempbuf, offset, a);
-	       inc(offset, a);
-	       dec(remaining, a);
-	    end;
-	    free(tempbuf);
-	    instr^.sample:=ptr($ffff,handle);
-	    {$ENDIF}
-	 end;
-      end else begin
-	 instr^.size:=0;
-	 instr^.sample:=nil;
-      end;
-   end;
-   loadSamples:=MERR_NONE;
-end;
-
-Procedure joinTracks2Patterns(var module:PModule);
-Var t,i     : Word;
-    pat     : PPattern;
-Begin
-  for t:=0 to module^.patternCount-1 do begin
-    pat:=@module^.patterns^[t];
-    for i:=0 to module^.channelCount-1 do
-      pat^.tracks[i]:=module^.tracks^[word(pat^.tracks[i])];
-  end;
-end;
-
-Function loadMOD;
-var a:integer;
-Begin
-  module^.tempo:=125;
-  module^.speed:=6;
-  a:=loadInstruments(file_,module);
-  loadMOD:=a;
-  if a<>MERR_NONE then exit;
-  a:=loadPatterns(file_,module);
-  loadMOD:=a;
-  if a<>MERR_NONE then exit;
-  a:=loadTracks(file_,module);
-  loadMOD:=a;
-  if a<>MERR_NONE then exit;
-  a:=loadSamples(file_,module);
-  loadMOD:=a;
-  if (a<>MERR_NONE) and (a<>MERR_CORRUPT) then exit;
-  joinTracks2Patterns(module);
-  if module^.modType=MOD_15 then module^.modType:=MOD_MOD;
-end;
-
-Function ampLoadMOD(name:String;options:longint):PModule;
-Var f:file;
-    l:longint;
-    module:PModule;
-    b:Integer;
-begin
-  loadOptions:=options;
-  module:=malloc(sizeof(TModule));
-  if module=nil then
-   begin
-    moduleError:=MERR_MEMORY;
-    ampLoadMOD:=nil;
-    exit;
-   end;
-  fillchar(module^,0,sizeof(module^));
-  assign(f,name);
-  reset(f,1);
-  if IOresult<>0 then
-   begin
-    moduleError:=MERR_FILE;
-    ampLoadMOD:=nil;
-    exit;
-   end;
-  module^.modType:=MOD_NONE;
-  seek(f,1080);
-  blockread(f,l,4);
-  if (l=$2E4B2E4D) or (l=$34544C46) then
-   begin
-    module^.modType:=MOD_MOD;
-    seek(f,0);
-    blockread(f,module^.name,20);
-    module^.name[20]:=#0;
-    module^.channelCount:=4;
-    move(order4,module^.channelPanning,4);
-   end
-  else if l=$38544C46 then
-   begin
-    module^.modType:=MOD_TREK;
-    seek(f,0);
-    blockread(f,module^.name,20);
-    module^.name[20]:=#0;
-    module^.channelCount:=8;
-    move(order8,module^.channelPanning,8);
-   end
-  else if l=$4e484336 then
-   begin
-    module^.modType:=MOD_MOD;
-    seek(f,0);
-    blockread(f,module^.name,20);
-    module^.name[20]:=#0;
-    module^.channelCount:=6;
-    move(order6,module^.channelPanning,6);
-   end
-  else if l=$4e484338 then
-   begin
-    module^.modType:=MOD_MOD;
-    seek(f,0);
-    blockread(f,module^.name,20);
-    module^.name[20]:=#0;
-    module^.channelCount:=8;
-    move(order8,module^.channelPanning,8);
-   end
-  else
-   begin
-    module^.modType:=MOD_15;
-    seek(f,0);
-    blockread(f,module^.name,20);
-    module^.name[20]:=#0;
-    module^.channelCount:=4;
-    move(order4,module^.channelPanning,4);
-   end;
-  if module^.modType=MOD_NONE then
-   begin
-    moduleError:=MERR_TYPE;
-    ampLoadMOD:=nil;
-    exit;
-   end;
-  b:=loadMOD(f,module);
-  moduleError:=b;
-  if b=MERR_NONE then module^.filesize:=filesize(f) else
-   begin
-    ampFreeModule(module);
-    free(module);
-    module:=nil;
-   end;
-  close(f);
-  ampLoadMOD:=module;
-end;
-
-end.
+unit modload;
+{$O+}
+interface
+implementation
+end.
diff --git a/dosbox.conf b/dosbox.conf
index a3645ee..b5d9c29 100644
--- a/dosbox.conf
+++ b/dosbox.conf
@@ -237,8 +237,11 @@ ipx=false
 mount s /home/xen/saki/projects/Ironseed
 #mount f /home/xen/projects/Ironseed
 mount g /home/xen/saki/projects/Ironseed
+mount f /home/xen/saki/projects/Ironseed
 
-set path=z:\;g:\bp\bin;f:\bp\bin
+mount a /home/xen/saki/projects/Ironseed/masminst
+
+set path=z:\;g:\bp\bin;f:\bp\bin;f:\tc\bin
 
 s:
 cd ironseed
diff --git a/makedata/aliemake.pas b/makedata/aliemake.pas
index 15b90ed..0047fa8 100644
--- a/makedata/aliemake.pas
+++ b/makedata/aliemake.pas
@@ -1,4 +1,20 @@
 program makealiencontacts;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
 
 type
  alientype=
diff --git a/makedata/artimake.pas b/makedata/artimake.pas
index fa8b914..fb56452 100644
--- a/makedata/artimake.pas
+++ b/makedata/artimake.pas
@@ -1,4 +1,20 @@
 program makeartifact;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
 
 type
  artifacttype=string[10];
diff --git a/makedata/cargmake.pas b/makedata/cargmake.pas
index 5cb33fe..ec6469b 100644
--- a/makedata/cargmake.pas
+++ b/makedata/cargmake.pas
@@ -1,4 +1,20 @@
 program generatecargodata;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
 
 const
  maxcargo= 145;
@@ -16,9 +32,9 @@ var
  c: char;
 
 begin
- assign(f,'data\cargo.dta');
+ assign(f,'data/cargo.dta');
  rewrite(f);
- assign(ft,'makedata\cargo.txt');
+ assign(ft,'makedata/cargo.txt');
  reset(ft);
  readln(ft);
  for i:=1 to maxcargo do
diff --git a/makedata/creamake.pas b/makedata/creamake.pas
index ecca8b1..0b9ba50 100644
--- a/makedata/creamake.pas
+++ b/makedata/creamake.pas
@@ -1,4 +1,20 @@
 program generatecargodata;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
 
 uses crt;
 
@@ -72,7 +88,7 @@ begin
  reset(f2);
  read(f2,cr^);
  close(f2);
- assign(ft,'itemdata.txt');
+ assign(ft,'other\itemdata.txt');
  rewrite(ft);
  writeln(ft,'    ITEM TO CREATE             PART #1             PART #2              PART#3 WORTH LEVELS            ');
  writeln(ft,'------------------ ------------------- ------------------- ------------------- ----- ------------------');
diff --git a/makedata/crewmake.pas b/makedata/crewmake.pas
index 690b5f6..0ca55b6 100644
--- a/makedata/crewmake.pas
+++ b/makedata/crewmake.pas
@@ -1,4 +1,21 @@
 program makecrew;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
+
 uses crt;
 
 type
@@ -38,7 +55,7 @@ begin
  assign(fs,'makedata\crew.txt');
  reset(fs);
  assign(ft,'data\crew.dta');
- reset(ft);
+ rewrite(ft);
  clrscr;
  for a:=1 to 30 do
   begin
diff --git a/makedata/elemmake.pas b/makedata/elemmake.pas
index b23b7cb..7d96863 100644
--- a/makedata/elemmake.pas
+++ b/makedata/elemmake.pas
@@ -1,4 +1,20 @@
 program generatecargodata;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
 
 type
  cargotype=
@@ -17,7 +33,7 @@ var
 
 begin
  assign(f,'\ironseed\data\elements.dta');
- reset(f);
+ rewrite(f);
  assign(ft,'\ironseed\makedata\element.txt');
  reset(ft);
  read(ft,index);
diff --git a/makedata/eventmak.pas b/makedata/eventmak.pas
index ce159d6..68b69ba 100644
--- a/makedata/eventmak.pas
+++ b/makedata/eventmak.pas
@@ -1,4 +1,20 @@
 program eventmake;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
 
 uses crt;
 
diff --git a/makedata/getfont.pas b/makedata/getfont.pas
index 113b611..bc645c2 100644
--- a/makedata/getfont.pas
+++ b/makedata/getfont.pas
@@ -1,4 +1,20 @@
 program getfontfromfile;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
 
 uses crt,graftool;
 
diff --git a/makedata/iconmake.pas b/makedata/iconmake.pas
index 8dec2c9..92cf1d1 100644
--- a/makedata/iconmake.pas
+++ b/makedata/iconmake.pas
@@ -1,4 +1,21 @@
 program convertplanicons;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
+
 uses crt, data;
 
 type
diff --git a/makedata/itemmake.pas b/makedata/itemmake.pas
index e1fff9e..16ad8e8 100644
--- a/makedata/itemmake.pas
+++ b/makedata/itemmake.pas
@@ -1,4 +1,20 @@
 program getiteminfostuff;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
 
 type
  iteminfotype=
diff --git a/makedata/makename.pas b/makedata/makename.pas
index e26310d..63cb4fd 100644
--- a/makedata/makename.pas
+++ b/makedata/makename.pas
@@ -1,4 +1,20 @@
 program makenames;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
 
 var
  i,j,a,b: integer;
diff --git a/makedata/scanmake.pas b/makedata/scanmake.pas
index 4cd82d9..1b4eea7 100644
--- a/makedata/scanmake.pas
+++ b/makedata/scanmake.pas
@@ -1,4 +1,20 @@
 program generatecargodata;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
 
 type
  cargotype=
@@ -21,7 +37,7 @@ begin
  assign(ft,'\ironseed\makedata\scandata.txt');
  reset(ft);}
  assign(f,'data/scan.dta');
- reset(f);
+ rewrite(f);
  assign(ft,'makedata/scandata.txt');
  reset(ft);
  for i:=1 to 17 do
diff --git a/makedata/shipmake.pas b/makedata/shipmake.pas
index 13d10ef..b3b48a0 100644
--- a/makedata/shipmake.pas
+++ b/makedata/shipmake.pas
@@ -1,4 +1,20 @@
 program getshipdata;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
 
 type
  alienshiptype=
diff --git a/makedata/sysmake.pas b/makedata/sysmake.pas
index 9cde194..ff7e057 100644
--- a/makedata/sysmake.pas
+++ b/makedata/sysmake.pas
@@ -1,4 +1,20 @@
 program displaysystems;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
 
 
 uses crt;
@@ -21,11 +37,11 @@ var
 
 procedure display;
 begin
- assign(f,'data\sysname.dta');
+ assign(f,'data/sysname.dta');
  reset(f);
- assign(f2,'data\sysset.dta');
+ assign(f2,'data/sysset.dta');
  reset(f2);
- assign(ft,'sysdata.txt');
+ assign(ft,'other/sysdata.txt');
  rewrite(ft);
  for a:=1 to 250 do
   begin
@@ -58,11 +74,9 @@ end;
 
 
 begin
- display;
- exit;
- assign(ft,'makedata\names.txt');
+ assign(ft,'makedata/names.txt');
  reset(ft);
- assign(f,'data\sysname.dta');
+ assign(f,'data/sysname.dta');
  rewrite(f);
  textmode(co80);
  for a:=1 to 250 do
@@ -76,4 +90,7 @@ begin
   end;
  close(ft);
  close(f);
+
+ display;
+ exit;
 end.
\ No newline at end of file
diff --git a/makedata/weapmake.pas b/makedata/weapmake.pas
index 9efe8be..d163372 100644
--- a/makedata/weapmake.pas
+++ b/makedata/weapmake.pas
@@ -1,4 +1,20 @@
 program generateweapondata;
+(********************************************************************
+    This file is part of Ironseed.
+
+    Ironseed is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Ironseed is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Ironseed.  If not, see <http://www.gnu.org/licenses/>.
+********************************************************************)
 
 uses crt;
 
diff --git a/makedata/evolve.txt b/other/evolve.txt
similarity index 100%
rename from makedata/evolve.txt
rename to other/evolve.txt
diff --git a/itemdata.txt b/other/itemdata.txt
similarity index 100%
rename from itemdata.txt
rename to other/itemdata.txt
diff --git a/makedata/items.txt b/other/items.txt
similarity index 100%
rename from makedata/items.txt
rename to other/items.txt
diff --git a/makedata/stuff.txt b/other/stuff.txt
similarity index 100%
rename from makedata/stuff.txt
rename to other/stuff.txt
diff --git a/sysdata.txt b/other/sysdata.txt
similarity index 100%
rename from sysdata.txt
rename to other/sysdata.txt
diff --git a/makedata/xp.txt b/other/xp.txt
similarity index 100%
rename from makedata/xp.txt
rename to other/xp.txt
diff --git a/png/alien.png b/png/alien.png
new file mode 100644
index 0000000..63426ee
Binary files /dev/null and b/png/alien.png differ
diff --git a/png/alien1.png b/png/alien1.png
new file mode 100644
index 0000000..2164801
Binary files /dev/null and b/png/alien1.png differ
diff --git a/png/alien10.png b/png/alien10.png
new file mode 100644
index 0000000..fb03158
Binary files /dev/null and b/png/alien10.png differ
diff --git a/png/alien2.png b/png/alien2.png
new file mode 100644
index 0000000..759ca82
Binary files /dev/null and b/png/alien2.png differ
diff --git a/png/alien3.png b/png/alien3.png
new file mode 100644
index 0000000..661d107
Binary files /dev/null and b/png/alien3.png differ
diff --git a/png/alien4.png b/png/alien4.png
new file mode 100644
index 0000000..64f511f
Binary files /dev/null and b/png/alien4.png differ
diff --git a/png/alien5.png b/png/alien5.png
new file mode 100644
index 0000000..e3e9d90
Binary files /dev/null and b/png/alien5.png differ
diff --git a/png/alien6.png b/png/alien6.png
new file mode 100644
index 0000000..fbabeef
Binary files /dev/null and b/png/alien6.png differ
diff --git a/png/alien7.png b/png/alien7.png
new file mode 100644
index 0000000..994329c
Binary files /dev/null and b/png/alien7.png differ
diff --git a/png/alien8.png b/png/alien8.png
new file mode 100644
index 0000000..d3a6737
Binary files /dev/null and b/png/alien8.png differ
diff --git a/png/alien9.png b/png/alien9.png
new file mode 100644
index 0000000..9519d5e
Binary files /dev/null and b/png/alien9.png differ
diff --git a/png/back01.png b/png/back01.png
new file mode 100644
index 0000000..8937ab3
Binary files /dev/null and b/png/back01.png differ
diff --git a/png/back02.png b/png/back02.png
new file mode 100644
index 0000000..16730dd
Binary files /dev/null and b/png/back02.png differ
diff --git a/png/back03.png b/png/back03.png
new file mode 100644
index 0000000..5751d95
Binary files /dev/null and b/png/back03.png differ
diff --git a/png/back04.png b/png/back04.png
new file mode 100644
index 0000000..03a9eb5
Binary files /dev/null and b/png/back04.png differ
diff --git a/png/back05.png b/png/back05.png
new file mode 100644
index 0000000..49944e8
Binary files /dev/null and b/png/back05.png differ
diff --git a/png/back06.png b/png/back06.png
new file mode 100644
index 0000000..45d2d92
Binary files /dev/null and b/png/back06.png differ
diff --git a/png/back07.png b/png/back07.png
new file mode 100644
index 0000000..5ea82af
Binary files /dev/null and b/png/back07.png differ
diff --git a/png/back08.png b/png/back08.png
new file mode 100644
index 0000000..18dbdc9
Binary files /dev/null and b/png/back08.png differ
diff --git a/png/back09.png b/png/back09.png
new file mode 100644
index 0000000..f8e01fc
Binary files /dev/null and b/png/back09.png differ
diff --git a/png/back10.png b/png/back10.png
new file mode 100644
index 0000000..157269a
Binary files /dev/null and b/png/back10.png differ
diff --git a/png/back11.png b/png/back11.png
new file mode 100644
index 0000000..598b032
Binary files /dev/null and b/png/back11.png differ
diff --git a/png/back12.png b/png/back12.png
new file mode 100644
index 0000000..a25c989
Binary files /dev/null and b/png/back12.png differ
diff --git a/png/back13.png b/png/back13.png
new file mode 100644
index 0000000..450a986
Binary files /dev/null and b/png/back13.png differ
diff --git a/png/back14.png b/png/back14.png
new file mode 100644
index 0000000..24da5a2
Binary files /dev/null and b/png/back14.png differ
diff --git a/png/back15.png b/png/back15.png
new file mode 100644
index 0000000..e31507c
Binary files /dev/null and b/png/back15.png differ
diff --git a/png/back16.png b/png/back16.png
new file mode 100644
index 0000000..2af78eb
Binary files /dev/null and b/png/back16.png differ
diff --git a/png/back17.png b/png/back17.png
new file mode 100644
index 0000000..9332135
Binary files /dev/null and b/png/back17.png differ
diff --git a/png/back18.png b/png/back18.png
new file mode 100644
index 0000000..1420152
Binary files /dev/null and b/png/back18.png differ
diff --git a/png/back19.png b/png/back19.png
new file mode 100644
index 0000000..ceb3d70
Binary files /dev/null and b/png/back19.png differ
diff --git a/png/back20.png b/png/back20.png
new file mode 100644
index 0000000..4ec22db
Binary files /dev/null and b/png/back20.png differ
diff --git a/png/back21.png b/png/back21.png
new file mode 100644
index 0000000..8c32325
Binary files /dev/null and b/png/back21.png differ
diff --git a/png/back22.png b/png/back22.png
new file mode 100644
index 0000000..1745dc9
Binary files /dev/null and b/png/back22.png differ
diff --git a/png/battle1.png b/png/battle1.png
new file mode 100644
index 0000000..a7f6a4b
Binary files /dev/null and b/png/battle1.png differ
diff --git a/png/cargo.png b/png/cargo.png
new file mode 100644
index 0000000..41439fd
Binary files /dev/null and b/png/cargo.png differ
diff --git a/png/channel7.png b/png/channel7.png
new file mode 100644
index 0000000..c49057c
Binary files /dev/null and b/png/channel7.png differ
diff --git a/png/char.png b/png/char.png
new file mode 100644
index 0000000..1f84de4
Binary files /dev/null and b/png/char.png differ
diff --git a/png/char2.png b/png/char2.png
new file mode 100644
index 0000000..6882d46
Binary files /dev/null and b/png/char2.png differ
diff --git a/png/charani.png b/png/charani.png
new file mode 100644
index 0000000..fdd74e7
Binary files /dev/null and b/png/charani.png differ
diff --git a/png/charcom.png b/png/charcom.png
new file mode 100644
index 0000000..9872a09
Binary files /dev/null and b/png/charcom.png differ
diff --git a/png/cloud.png b/png/cloud.png
new file mode 100644
index 0000000..88bf85e
Binary files /dev/null and b/png/cloud.png differ
diff --git a/png/com.png b/png/com.png
new file mode 100644
index 0000000..86763e5
Binary files /dev/null and b/png/com.png differ
diff --git a/png/end1.png b/png/end1.png
new file mode 100644
index 0000000..33c6dfa
Binary files /dev/null and b/png/end1.png differ
diff --git a/png/end2.png b/png/end2.png
new file mode 100644
index 0000000..9a71ec4
Binary files /dev/null and b/png/end2.png differ
diff --git a/png/end3.png b/png/end3.png
new file mode 100644
index 0000000..78ee63f
Binary files /dev/null and b/png/end3.png differ
diff --git a/png/end4.png b/png/end4.png
new file mode 100644
index 0000000..7a4e6b3
Binary files /dev/null and b/png/end4.png differ
diff --git a/png/end5.png b/png/end5.png
new file mode 100644
index 0000000..bc9b476
Binary files /dev/null and b/png/end5.png differ
diff --git a/png/end6.png b/png/end6.png
new file mode 100644
index 0000000..2a34540
Binary files /dev/null and b/png/end6.png differ
diff --git a/png/fight.png b/png/fight.png
new file mode 100644
index 0000000..6a701bd
Binary files /dev/null and b/png/fight.png differ
diff --git a/png/font.png b/png/font.png
new file mode 100644
index 0000000..bd48b64
Binary files /dev/null and b/png/font.png differ
diff --git a/png/font0.png b/png/font0.png
new file mode 100644
index 0000000..f030268
Binary files /dev/null and b/png/font0.png differ
diff --git a/png/icons.png b/png/icons.png
new file mode 100644
index 0000000..6b8a947
Binary files /dev/null and b/png/icons.png differ
diff --git a/png/image01.png b/png/image01.png
new file mode 100644
index 0000000..d959bb1
Binary files /dev/null and b/png/image01.png differ
diff --git a/png/image02.png b/png/image02.png
new file mode 100644
index 0000000..c745371
Binary files /dev/null and b/png/image02.png differ
diff --git a/png/image03.png b/png/image03.png
new file mode 100644
index 0000000..78945d3
Binary files /dev/null and b/png/image03.png differ
diff --git a/png/image04.png b/png/image04.png
new file mode 100644
index 0000000..478bd41
Binary files /dev/null and b/png/image04.png differ
diff --git a/png/image05.png b/png/image05.png
new file mode 100644
index 0000000..69ac512
Binary files /dev/null and b/png/image05.png differ
diff --git a/png/image06.png b/png/image06.png
new file mode 100644
index 0000000..32afa97
Binary files /dev/null and b/png/image06.png differ
diff --git a/png/image07.png b/png/image07.png
new file mode 100644
index 0000000..d21a62f
Binary files /dev/null and b/png/image07.png differ
diff --git a/png/image08.png b/png/image08.png
new file mode 100644
index 0000000..42ee832
Binary files /dev/null and b/png/image08.png differ
diff --git a/png/image09.png b/png/image09.png
new file mode 100644
index 0000000..5932895
Binary files /dev/null and b/png/image09.png differ
diff --git a/png/image10.png b/png/image10.png
new file mode 100644
index 0000000..1c4c350
Binary files /dev/null and b/png/image10.png differ
diff --git a/png/image11.png b/png/image11.png
new file mode 100644
index 0000000..ee630f9
Binary files /dev/null and b/png/image11.png differ
diff --git a/png/image12.png b/png/image12.png
new file mode 100644
index 0000000..11f6a50
Binary files /dev/null and b/png/image12.png differ
diff --git a/png/image13.png b/png/image13.png
new file mode 100644
index 0000000..0fab082
Binary files /dev/null and b/png/image13.png differ
diff --git a/png/image14.png b/png/image14.png
new file mode 100644
index 0000000..eeba701
Binary files /dev/null and b/png/image14.png differ
diff --git a/png/image15.png b/png/image15.png
new file mode 100644
index 0000000..62af545
Binary files /dev/null and b/png/image15.png differ
diff --git a/png/image16.png b/png/image16.png
new file mode 100644
index 0000000..fe06886
Binary files /dev/null and b/png/image16.png differ
diff --git a/png/image17.png b/png/image17.png
new file mode 100644
index 0000000..947717c
Binary files /dev/null and b/png/image17.png differ
diff --git a/png/image18.png b/png/image18.png
new file mode 100644
index 0000000..e5fe20f
Binary files /dev/null and b/png/image18.png differ
diff --git a/png/image19.png b/png/image19.png
new file mode 100644
index 0000000..dcfb3d9
Binary files /dev/null and b/png/image19.png differ
diff --git a/png/image20.png b/png/image20.png
new file mode 100644
index 0000000..4e575cf
Binary files /dev/null and b/png/image20.png differ
diff --git a/png/image21.png b/png/image21.png
new file mode 100644
index 0000000..20c9427
Binary files /dev/null and b/png/image21.png differ
diff --git a/png/image22.png b/png/image22.png
new file mode 100644
index 0000000..c2a1c66
Binary files /dev/null and b/png/image22.png differ
diff --git a/png/image23.png b/png/image23.png
new file mode 100644
index 0000000..9be7fc6
Binary files /dev/null and b/png/image23.png differ
diff --git a/png/image24.png b/png/image24.png
new file mode 100644
index 0000000..c8fd20f
Binary files /dev/null and b/png/image24.png differ
diff --git a/png/image25.png b/png/image25.png
new file mode 100644
index 0000000..c155316
Binary files /dev/null and b/png/image25.png differ
diff --git a/png/image26.png b/png/image26.png
new file mode 100644
index 0000000..55c3b40
Binary files /dev/null and b/png/image26.png differ
diff --git a/png/image27.png b/png/image27.png
new file mode 100644
index 0000000..aa0d444
Binary files /dev/null and b/png/image27.png differ
diff --git a/png/image28.png b/png/image28.png
new file mode 100644
index 0000000..a9b0030
Binary files /dev/null and b/png/image28.png differ
diff --git a/png/image29.png b/png/image29.png
new file mode 100644
index 0000000..ec808eb
Binary files /dev/null and b/png/image29.png differ
diff --git a/png/image30.png b/png/image30.png
new file mode 100644
index 0000000..8670262
Binary files /dev/null and b/png/image30.png differ
diff --git a/png/image31.png b/png/image31.png
new file mode 100644
index 0000000..a5cc054
Binary files /dev/null and b/png/image31.png differ
diff --git a/png/image32.png b/png/image32.png
new file mode 100644
index 0000000..f67847b
Binary files /dev/null and b/png/image32.png differ
diff --git a/png/intro2.png b/png/intro2.png
new file mode 100644
index 0000000..bcd6f15
Binary files /dev/null and b/png/intro2.png differ
diff --git a/png/intro5.png b/png/intro5.png
new file mode 100644
index 0000000..23009d9
Binary files /dev/null and b/png/intro5.png differ
diff --git a/png/landform.png b/png/landform.png
new file mode 100644
index 0000000..0115e3f
Binary files /dev/null and b/png/landform.png differ
diff --git a/png/log.png b/png/log.png
new file mode 100644
index 0000000..f5be52a
Binary files /dev/null and b/png/log.png differ
diff --git a/png/main-cube.png b/png/main-cube.png
new file mode 100644
index 0000000..46bb3b2
Binary files /dev/null and b/png/main-cube.png differ
diff --git a/png/main-status-bulb.png b/png/main-status-bulb.png
new file mode 100644
index 0000000..a33d883
Binary files /dev/null and b/png/main-status-bulb.png differ
diff --git a/makedata/planicon.pal b/png/main.pal
similarity index 69%
rename from makedata/planicon.pal
rename to png/main.pal
index 6aa7182..ee1c765 100644
Binary files a/makedata/planicon.pal and b/png/main.pal differ
diff --git a/png/main.png b/png/main.png
new file mode 100644
index 0000000..7b24a05
Binary files /dev/null and b/png/main.png differ
diff --git a/png/main3.png b/png/main3.png
new file mode 100644
index 0000000..99366f1
Binary files /dev/null and b/png/main3.png differ
diff --git a/png/mouse--char.png b/png/mouse--char.png
new file mode 100644
index 0000000..115e0a3
Binary files /dev/null and b/png/mouse--char.png differ
diff --git a/png/mouse--com.png b/png/mouse--com.png
new file mode 100644
index 0000000..f47e79e
Binary files /dev/null and b/png/mouse--com.png differ
diff --git a/png/mouse-1.png b/png/mouse-1.png
new file mode 100644
index 0000000..c2d52c1
Binary files /dev/null and b/png/mouse-1.png differ
diff --git a/png/mouse-2.png b/png/mouse-2.png
new file mode 100644
index 0000000..338a3ec
Binary files /dev/null and b/png/mouse-2.png differ
diff --git a/png/mouse-3.png b/png/mouse-3.png
new file mode 100644
index 0000000..1341c9c
Binary files /dev/null and b/png/mouse-3.png differ
diff --git a/png/planet-icons.png b/png/planet-icons.png
new file mode 100644
index 0000000..0ef70bc
Binary files /dev/null and b/png/planet-icons.png differ
diff --git a/png/planicon.png b/png/planicon.png
new file mode 100644
index 0000000..d5b5de6
Binary files /dev/null and b/png/planicon.png differ
diff --git a/png/psyche.png b/png/psyche.png
new file mode 100644
index 0000000..883874a
Binary files /dev/null and b/png/psyche.png differ
diff --git a/png/saver.png b/png/saver.png
new file mode 100644
index 0000000..5fc0812
Binary files /dev/null and b/png/saver.png differ
diff --git a/png/sector.png b/png/sector.png
new file mode 100644
index 0000000..8035130
Binary files /dev/null and b/png/sector.png differ
diff --git a/png/shield-icons.png b/png/shield-icons.png
new file mode 100644
index 0000000..db9db5d
Binary files /dev/null and b/png/shield-icons.png differ
diff --git a/png/ship1.png b/png/ship1.png
new file mode 100644
index 0000000..8085371
Binary files /dev/null and b/png/ship1.png differ
diff --git a/png/shippart.png b/png/shippart.png
new file mode 100644
index 0000000..5851eb3
Binary files /dev/null and b/png/shippart.png differ
diff --git a/png/tech1.png b/png/tech1.png
new file mode 100644
index 0000000..92ad580
Binary files /dev/null and b/png/tech1.png differ
diff --git a/png/trade.png b/png/trade.png
new file mode 100644
index 0000000..62fda53
Binary files /dev/null and b/png/trade.png differ
diff --git a/png/waricon.png b/png/waricon.png
new file mode 100644
index 0000000..32b7580
Binary files /dev/null and b/png/waricon.png differ
diff --git a/png/weapon-icons.png b/png/weapon-icons.png
new file mode 100644
index 0000000..2c5ceb4
Binary files /dev/null and b/png/weapon-icons.png differ
diff --git a/png/world.png b/png/world.png
new file mode 100644
index 0000000..edf73d8
Binary files /dev/null and b/png/world.png differ
diff --git a/version.txt b/version.txt
index b111351..d76d053 100644
--- a/version.txt
+++ b/version.txt
@@ -173,3 +173,6 @@ v1.20.0016:
 
 
 	
+v1.30.0001:
+	Source, graphical assets and sound effects have been released under GPL.
+	The DMP library has been replaced with stubs.
