unit crewtick;

{$O+}

interface
procedure GameTick(background, ticks: Integer);
function SkillTest(background, crew, difficulty, learn : Integer): Boolean;

implementation
uses data, utils, utils2, journey, weird;

   procedure CrewStress(background, crew : Integer);
   begin
   end; { CrewStress }

   function SkillTest(background, crew, difficulty, learn : Integer): Boolean;
   var
      ski, dif : Integer;
   begin
      with ship.crew[crew] do
	 begin
	    ski := skill;
	    if ski <= 5 then
	       ski := 5;
	    if dif <= 0 then
	       dif := 1;
	 if random(ski + dif) < ski then
	    SkillTest := True;
	 else
	    SkillTest := False;
	 end;
      CrewStress(background, crew);
      if random(1000) < learn then
	 addxp(crew, difficulty, background);
   end; { SkillTest }


   procedure CrewMessage(background, colour, crew : Integer; msg : String);
   var
      oldcolour	: Integer;
   begin
      if background <> 0 then
      begin
	 oldcolour := tcolor;
	 tcolor := colour;
	 showchar(crew, msg);
	 tcolor := oldcolour;
      end
      else
      begin
	 oldcolour := tcolor;
	 tcolor := colour;
	 println;
	 print(crewtitles[crew] + ': ' + msg);
	 tcolor := oldcolour;
      end;
      
	 
   end; { CrewMessage }

   procedure ShipTick(background : Integer);
   begin
      if ship.shield>1501 then
	 ship.battery:=ship.battery-round(weapons[ship.shield-1442].energy/100*ship.shieldlevel);
      if ship.battery<31980 then ship.battery:=ship.battery+round((100-ship.damages[1])/4)
      else ship.battery:=32000;
      if ship.battery<0 then
      begin
	 CrewMessage(background, 94, 0, 'Secondary power failure...Shields powering down...');
	 ship.shieldlevel:=0;
	 ship.battery:=0;
      end;
   end; { ShipTick }

   procedure PsyTick(background	: Integer);
   begin
   end; { PsyTick }

   procedure EngBuildFinish(background, team : Integer);
   var
      a, b, i: Integer;
      s: String[20];
   begin
      with ship.engrteam[team] do
      begin
	 dec(timeleft,5);
	 if timeleft<1 then
	 begin
	    case job of
	      2004 : ship.fuel:=ship.fuelmax;
	      2015 : begin
			     i:=ship.hullmax+25;
			     if i>5000 then addcargo2(2015)
			     else inc(ship.hullmax,15);
		     CrewMessage(background, 31, 2,'	Hull reinforced.');
			  end;
	      2016 : begin
			     i:=ship.accelmax+10;
			     if i>1100 then addcargo2(2016)
			     else inc(ship.accelmax,10);
		     CrewMessage(background, 31, 2,'Acc	eleration increased.');
			  end;
	      2017 : begin
			     i:=ship.cargomax+50;
			if i>20000 then addcargo2(2017)
			else inc(ship.cargomax,50);
			CrewMessage(background, 31, 2,'Cargo space increased.');
		     end;
	      2018 : begin
			addgunnode;
			CrewMessage(background, 31, 2,'Weapon Node Assembled.');
		     end;
	      2019 : begin
			a:=ship.crew[1].men;
			b:=1;
			for i:=1 to 6 do
			begin
			   if ship.crew[i].emo<a then
			   begin
			      a:=ship.crew[i].emo;
			      b:=i;
			   end;
			   if ship.crew[i].phy<a then
			   begin
			      a:=ship.crew[i].phy;
			      b:=i;
			   end;
			   if ship.crew[i].men<a then
			   begin
			      a:=ship.crew[i].men;
			      b:=i;
			   end;
			end;
			if ship.crew[b].emo=a then
			begin
			   inc(ship.crew[b].emo,15);
			   if ship.crew[b].emo>99 then ship.crew[b].emo:=99;
			end
			else if ship.crew[b].phy=a then
			begin
			   inc(ship.crew[b].phy,15);
			   if ship.crew[b].phy>99 then ship.crew[b].phy:=99;
			end
			else if ship.crew[b].men=a then
			begin
			   inc(ship.crew[b].men,15);
			   if ship.crew[b].men>99 then ship.crew[b].men:=99;
			end;
			s:=ship.crew[b].name;
			while (s[length(s)]=' ') do dec(s[0]);
			CrewMessage(background, 31, b,'Mind Drugs administered to '+s+'.');
		     end;
	    else addcargo2(job);
	    end;   
	    jobtype:=0;
	    timeleft:=0;
	    if job<>2019 then CrewMessage(background, 31, 2,'Synthesis completed, sir!');
	    job:=0;
	 end
	 else if timeleft=0 then timeleft:=5;
      end;
   end; { EngBuildFinish }

   procedure EngDisassembleFinish(background, item : Integer);
   var cfile : file of createarray;
      temp   : ^createarray;
      j,i    : integer;
   begin     
      new(temp);
      assign(cfile,'data\creation.dta');
      reset(cfile);
      if ioresult<>0 then errorhandler('creation.dta',1);
      read(cfile,temp^);
      if ioresult<>0 then errorhandler('creation.dta',5);
      close(cfile);
      i:=1;
      while (temp^[i].index<>item) and (i<=totalcreation) do inc(i);
      if i>totalcreation then errorhandler('Disassemble error!',6);
      for j:=1 to 3 do
	 if not skillcheck(2) then addcargo(4020)
	 else addcargo2(temp^[i].parts[j]);
      dispose(temp);
   end; { EngDisassembleFinish }

   procedure EngTick(background: Integer);
   var
      i, j, a		: integer;
      nextjob, nexttime	: integer;
   begin
      for j:=1 to 3 do
	 with ship.engrteam[j] do
	    case jobtype of
	      0	  : 
		 if (job<8) and (job>0) then
		 begin
		    dec(timeleft, 5);
		    if random(17)=0 then
		    begin
		       if ship.damages[job]>0 then
		       begin
			  dec(ship.damages[job]);
			  if timeleft>5 then dec(timeleft,5);
		       end;
		       if ship.damages[job]=0 then
		       begin
			  nextjob := 0;
			  nexttime := 0;
			  for i := 1 to 8 do
			  begin
			     if (i = 8) and (ship.hulldamage < ship.hullmax) then
			     begin
				nextjob := 8;
				nexttime := (ship.hullmax - ship.hulldamage) * 30;
			     end
			     else
				if ship.damages[i] > 0 then
				begin
				   nextjob := i;
				   nexttime := ship.damages[i] * 70;
				   break;
				end;
			  end;
			  for i:=1 to 3 do
			     if (i<>j) and (ship.engrteam[i].jobtype=0) and (ship.engrteam[i].job=job) then
			     begin
				ship.engrteam[i].timeleft:=nexttime;
				ship.engrteam[i].job:=nextjob;
			     end;
			  timeleft := nexttime;
			  CrewMessage(background, 31, 2, repairname[job]+' repaired, sir!');
			  job := nextjob;
		       end;
		    end;
		 end
		 else if job=8 then
		 begin
		    dec(timeleft,5);
		    if random(8)=0 then
		    begin
		       if ship.hulldamage<ship.hullmax then
		       begin
			  inc(ship.hulldamage);
			  if timeleft>5 then dec(timeleft,5);
		       end;
		       if ship.hulldamage=ship.hullmax then
		       begin
			  nextjob := 0;
			  nexttime := 0;
			  for i := 1 to 7 do
			  begin
			     if ship.damages[i] > 0 then
			     begin
				nextjob := i;
				nexttime := ship.damages[i] * 70;
				break;
			     end;
			  end;
			  for i:=1 to 3 do
			     if (i<>j) and (ship.engrteam[i].jobtype=0) and (ship.engrteam[i].job=job) then
			     begin
				ship.engrteam[i].timeleft:=nexttime;
				ship.engrteam[i].job:=nextjob;
			     end;
			  CrewMessage(background, 31, 2,'Hull damage repaired, sir!');
			  job:=nextjob;
			  timeleft:=nexttime;
		       end;
		    end;
		 end;
	      1,2 : 
	         if job<1500 then
		 begin
		    dec(timeleft,5);
		    if random(220)=0 then
		    begin
		       timeleft:=0;
		       if jobtype=1 then ship.gunnodes[extra]:=job-999;
		       if jobtype=2 then CrewMessage(background, 31, 2, 'Weapon removed, sir!')
		       else CrewMessage(background, 31, 2,'weapon installed, sir!');
		       job:=0;
		       jobtype:=0;
		    end;
		 end
		 else begin
		    dec(timeleft,5);
		    if random(220)=0 then
		    begin
		       timeleft:=0;
		       if jobtype=1 then ship.shield:=job;
		       if jobtype=2 then CrewMessage(background, 31, 2, 'Shield removed, sir!')
		       else
		       begin
			  CrewMessage(background, 31, 2,'Shield installed, sir!');
			  if job>1501 then
			  begin
			     ship.shieldopt[3]:=100;
			     ship.shieldopt[2]:=40;
			     ship.shieldopt[1]:=10;
			  end
			  else for a:=1 to 3 do ship.shieldopt[a]:=100-ship.damages[2];
		       end;
		       job:=0;
		       jobtype:=0;
		    end;
		 end;
	      3	  : 
		   EngBuildFinish(background, j);
	      4	  : begin
		       dec(timeleft,5);
		       if (timeleft<1) then
		       begin
			  EngDisassembleFinish(background, job);
			  timeleft:=0;
			  job:=0;
			  jobtype:=0;
			  CrewMessage(background, 31, 2,'Disassmebling completed, sir!');
		       end;
		    end;
	      5	  : begin
		       dec(timeleft,5);
		       if (timeleft<1) and (job<>6900) then
		       begin
			  timeleft:=0;
			  jobtype:=0;
			  CrewMessage(background, 31, 2,'Artifact research completed, sir!');
			  dothatartifactthing(job);
			  job:=0;
		       end;
		    end;
	    end;  
      
   end; { EngTick }

procedure SecTick(background: Integer);
begin
end; { SecTick }

procedure SciTick(background: Integer);
begin
end; { SciTick }

procedure AstTick(background: Integer);
begin
end; { AstTick }

procedure MedTick(background: Integer);
begin
end; { MedTick }

procedure ResearchTick(background :  Integer);
var
   i : Integer;
begin
   for i := 1 to 6 do
      if (ship.research and (1 shl i)) > 0 then
	 addxp(i, 25, background);
end; { ResearchTick }

procedure GameTick(background, ticks: Integer);
begin
   while ticks > 0 do
   begin
      dec(ticks, 1);
      ShipTick(background);
      EngTick(background);
      PsyTick(background);
      SciTick(background);
      SecTick(background);
      AstTick(background);
      MedTick(background);
      inc(ship.stardate[5],5);
      if ship.stardate[5]>99 then
      begin
	 ResearchTick(background);
	 inc(ship.stardate[4],ship.stardate[5] div 100);
	 ship.stardate[5]:=ship.stardate[5] mod 100;
	 if ship.stardate[4]>19 then
	 begin
	    inc(ship.stardate[2],ship.stardate[4] div 20);
	    ship.stardate[4]:=ship.stardate[4] mod 20;
	    if ship.stardate[2]>19 then
	    begin
	       inc(ship.stardate[1],ship.stardate[2] div 20);
	       ship.stardate[2]:=ship.stardate[2] mod 20;
	       if ship.stardate[1]>19 then
	       begin
		  inc(ship.stardate[3],ship.stardate[1] div 20);
		  ship.stardate[1]:=ship.stardate[1] mod 20;
	       end;
	    end;
	 end;
      end;
   end;
end; { GameTick }


begin
end.
